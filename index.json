[{"content":"安装卸载 apt install nginx vim /etc/nginx/conf.d/xxx.xx.conf /usr/sbin/nginx -t systemctl restart nginx systemctl status nginx # apt autoremove nginx conf server { listen 443 ssl http2; #listen [::]:443 ssl http2; server_name xxx.xx; ssl_certificate /root/cert/fullchain.cer; ssl_certificate_key /root/cert/xxx.xx.key; ssl_trusted_certificate /root/cert/ca.cer; ssl_session_timeout 5m; ssl_protocols TLSv1.3; ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5; # Config for 0-RTT in TLSv1.3 ssl_early_data on; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security \u0026#34;max-age=31536000\u0026#34;; client_max_body_size 5m; client_body_buffer_size 256k; client_header_timeout 3m; client_body_timeout 3m; send_timeout 3m; proxy_connect_timeout 300s; proxy_read_timeout 300s; proxy_send_timeout 300s; proxy_buffer_size 64k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; proxy_ignore_client_abort on; location /yyy/ { proxy_pass http://localhost:2095; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # Config for 0-RTT in TLSv1.3 # proxy_set_header Early-Data $ssl_early_data; } location /yyy/zzz { proxy_pass http://localhost:37469; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026#34;upgrade\u0026#34;; } } ","permalink":"https://suai.tk/posts/best_scripts/","summary":"安装卸载 apt install nginx vim /etc/nginx/conf.d/xxx.xx.conf /usr/sbin/nginx -t systemctl restart nginx systemctl status nginx # apt autoremove nginx conf server { listen 443 ssl http2; #listen [::]:443 ssl http2; server_name xxx.xx; ssl_certificate /root/cert/fullchain.cer; ssl_certificate_key /root/cert/xxx.xx.key; ssl_trusted_certificate /root/cert/ca.cer; ssl_session_timeout 5m; ssl_protocols TLSv1.3; ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5; # Config for 0-RTT in TLSv1.3 ssl_early_data on; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security \u0026#34;max-age=31536000\u0026#34;; client_max_body_size 5m; client_body_buffer_size 256k; client_header_timeout 3m; client_body_timeout 3m; send_timeout 3m; proxy_connect_timeout 300s; proxy_read_timeout 300s; proxy_send_timeout 300s; proxy_buffer_size 64k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; proxy_ignore_client_abort on; location /yyy/ { proxy_pass http://localhost:2095; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # Config for 0-RTT in TLSv1.","title":"Nginx配置"},{"content":"3种包管理器 winget chocolatey scoop1 使用powershell管理员模式安装 Set-ExecutionPolicy RemoteSigned -scope CurrentUser; 指定安装目录和软件全局安装目录, 在环境变量中配置好(安装目录/shims目录/全局安装目录) $env:SCOOP=\u0026#39;D:\\\\Program Files\\\\Scoop\u0026#39; $env:SCOOP_GLOBAL=\u0026#39;D:\\\\Program Files\\\\scoop_softs\u0026#39; 使用国内镜像安装 iwr -useb https://gitee.com/glsnames/scoop-installer/raw/master/bin/install.ps1 | iex 添加bucket scoop config SCOOP_REPO \u0026#39;https://gitee.com/glsnames/scoop-installer\u0026#39; scoop bucket add extras https://gitee.com/scoop-bucket/extras.git scoop bucket add scoopet https://github.com/ivaquero/scoopet.git scoop update aria2加速下载及启用代理（如有冲突，可择机关闭） scoop config proxy 127.0.0.1:10809 scoop config proxy scoop install aria2 scoop config aria2-enabled false scoop install sudo 官网https://scoop.sh/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/best_package_manager/","summary":"3种包管理器 winget chocolatey scoop1 使用powershell管理员模式安装 Set-ExecutionPolicy RemoteSigned -scope CurrentUser; 指定安装目录和软件全局安装目录, 在环境变量中配置好(安装目录/shims目录/全局安装目录) $env:SCOOP=\u0026#39;D:\\\\Program Files\\\\Scoop\u0026#39; $env:SCOOP_GLOBAL=\u0026#39;D:\\\\Program Files\\\\scoop_softs\u0026#39; 使用国内镜像安装 iwr -useb https://gitee.com/glsnames/scoop-installer/raw/master/bin/install.ps1 | iex 添加bucket scoop config SCOOP_REPO \u0026#39;https://gitee.com/glsnames/scoop-installer\u0026#39; scoop bucket add extras https://gitee.com/scoop-bucket/extras.git scoop bucket add scoopet https://github.com/ivaquero/scoopet.git scoop update aria2加速下载及启用代理（如有冲突，可择机关闭） scoop config proxy 127.0.0.1:10809 scoop config proxy scoop install aria2 scoop config aria2-enabled false scoop install sudo 官网https://scoop.sh/\u0026#160;\u0026#x21a9;\u0026#xfe0e;","title":"包管理_Windows"},{"content":"使用docker部署Gitea 参考[官网]1 docker network create xxx sudo groupadd -g 1000 git \u0026amp;\u0026amp; adduser --uid 1000 --gid 1000 --system --shell /bin/zsh --gecos \u0026#34;Git Version Control\u0026#34; --disabled-password --home /home/git git sudo -u git ssh-keygen -t rsa -b 4096 -C \u0026#34;Gitea Host Key\u0026#34; \u0026amp;\u0026amp; echo \u0026#34;$(cat /home/git/.ssh/id_rsa.pub)\u0026#34; \u0026gt;\u0026gt; /home/git/.ssh/authorized_keys cat \u0026lt;\u0026lt;\u0026#34;EOF\u0026#34; | sudo tee /usr/local/bin/gitea #!/bin/sh ssh -p 12222 -o StrictHostKeyChecking=no git@127.0.0.1 \u0026#34;SSH_ORIGINAL_COMMAND=\\\u0026#34;$SSH_ORIGINAL_COMMAND\\\u0026#34; $0 $@\u0026#34; EOF sudo chmod +x /usr/local/bin/gitea docker-compose version: \u0026#39;3\u0026#39; services: server: image: gitea/gitea:latest container_name: gitea environment: - USER_UID=1000 - USER_GID=1000 restart: always networks: - xxx volumes: - ./gitea:/data - /home/git/.ssh/:/data/git/.ssh - /etc/timezone:/etc/timezone:ro - /etc/localtime:/etc/localtime:ro ports: - \u0026#39;13000:3000\u0026#39; - \u0026#39;12222:22\u0026#39; networks: xxx: external: True 相关配置 [server] DOMAIN = xxx.xyz SSH_DOMAIN = xxx.xyz ROOT_URL = https://xxx.xyz/ 本地配置 Host gitea # HostName xxx.xyz HostName ip of xxx.xyz User git Port ppp IdentityFile \u0026#34;~/.ssh/gitea_rsa\u0026#34; 使用 Docker 安装 - Docs\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/gitea_docker_with/","summary":"使用docker部署Gitea 参考[官网]1 docker network create xxx sudo groupadd -g 1000 git \u0026amp;\u0026amp; adduser --uid 1000 --gid 1000 --system --shell /bin/zsh --gecos \u0026#34;Git Version Control\u0026#34; --disabled-password --home /home/git git sudo -u git ssh-keygen -t rsa -b 4096 -C \u0026#34;Gitea Host Key\u0026#34; \u0026amp;\u0026amp; echo \u0026#34;$(cat /home/git/.ssh/id_rsa.pub)\u0026#34; \u0026gt;\u0026gt; /home/git/.ssh/authorized_keys cat \u0026lt;\u0026lt;\u0026#34;EOF\u0026#34; | sudo tee /usr/local/bin/gitea #!/bin/sh ssh -p 12222 -o StrictHostKeyChecking=no git@127.0.0.1 \u0026#34;SSH_ORIGINAL_COMMAND=\\\u0026#34;$SSH_ORIGINAL_COMMAND\\\u0026#34; $0 $@\u0026#34; EOF sudo chmod +x /usr/local/bin/gitea docker-compose version: \u0026#39;3\u0026#39; services: server: image: gitea/gitea:latest container_name: gitea environment: - USER_UID=1000 - USER_GID=1000 restart: always networks: - xxx volumes: - .","title":"部署Gitea"},{"content":"树莓派 系统安装 github仓库：Debian-Pi-Aarch64/README_zh.md at master · openfans-community-offical/Debian-Pi-Aarch64 # md5校验 20b944d9645de361568a2f3e310f925e ./2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img 296cfa92e91d8c92324c2dcbb142ea92 ./2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img.xz # vim /etc/ssh/sshd_config PermitRootLogin yes systemctl disable network-manager # 安装zerotier curl -s https://install.zerotier.com | sudo bash sudo zerotier-cli join 6ab565387a498da5 sudo systemctl enable zerotier-one sudo systemctl status zerotier-one 系统备份 备份脚本,以 root 的身份。nanhantianyi/rpi-backup: raspberry pi backup，树莓派系统备份，最小镜像备份 git clone --depth=1 https://hub.fastgit.org/nanhantianyi/rpi-backup.git # 安装7z sudo apt install p7zip-full mkdir -p /media/share-hm/share/bkp/rasp cd /media/share-hm/share/bkp/rasp bash ~/rpi-backup/back.sh raspberry-stable-v2raya-1230.img 7z a raspberry-stable.img.7z raspberry-stable.img bash ~/rpi-backup/back.sh raspberry-stable-syncthing-openwrt.img \u0026amp;\u0026amp; rm -rf raspberry-stable.img raspberry-initial.img # 过久自动删除 find . -ctime +12 -iname \u0026#34;*.img\u0026#34; -print | xargs -i rm -rf {} ; find . -size -100M \\( -iname \u0026#34;*.img\u0026#34; -o -iname \u0026#34;*.7z\u0026#34; \\) -print | xargs -i rm -rf {} ; #find . \\( -iname \u0026#39;*.mp4\u0026#39; -o -iname \u0026#39;*.wmv\u0026#39; -o -iname \u0026#39;*.avi\u0026#39; \\) -print | xargs -i mv {} ../ # 恢复以后 resize.sh 系统固化 进行 tf 卡的系统固化, 打造更持久的树莓派 - 链滴, 树莓派影子系统（只读系统 overlayfs） · 语雀 在 tf 卡引入固化脚本，将 docker 目录及相应文件转移到远程 nas, 成功 # 进行远程nas的挂载 # vim /lib/systemd/system/docker.service # ExecStart=/usr/bin/dockerd -H fd:// --graph=/media/share-hm/bkp/rasp/docker --containerd=/run/containerd/containerd.sock #rsync -avz --progress -h /var/lib/docker /media/share-hm/bkp/docker_rasp/ sudo systemctl daemon-reload sudo systemctl restart docker sudo systemctl enable docker 固化脚本(overlayRoot.sh) #!/bin/sh # Read-only Root-FS for Raspian using overlayfs # Version 1.0 # # Created 2017 by Pascal Suter @ DALCO AG, Switzerland # to work on Raspian as custom init script # (raspbian does not use an initramfs on boot) # # Modified 2017-Apr-21 by Tony McBeardsley # # This program is free software: you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by # the Free Software Foundation, either version 3 of the License, or # (at your option) any later version. # # This program is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the # GNU General Public License for more details. # # You should have received a copy of the GNU General Public License # along with this program. If not, see # \u0026lt;http://www.gnu.org/licenses/\u0026gt;. # # # Tested with Raspbian mini, 2017-01-11 # # This script will mount the root filesystem read-only and overlay it with a temporary tempfs # which is read-write mounted. This is done using the overlayFS which is part of the linux kernel # since version 3.18. # when this script is in use, all changes made to anywhere in the root filesystem mount will be lost # upon reboot of the system. The SD card will only be accessed as read-only drive, which significantly # helps to prolong its life and prevent filesystem coruption in environments where the system is usually # not shut down properly # # Install: # copy this script to /sbin/overlayRoot.sh and add \u0026#34;init=/sbin/overlayRoot.sh\u0026#34; to the cmdline.txt # file in the raspbian image\u0026#39;s boot partition. # I strongly recommend to disable swapping before using this. it will work with swap but that just does # not make sens as the swap file will be stored in the tempfs which again resides in the ram. # run these commands on the booted raspberry pi BEFORE you set the init=/sbin/overlayRoot.sh boot option: # sudo dphys-swapfile swapoff # sudo dphys-swapfile uninstall # sudo update-rc.d dphys-swapfile remove # # To install software, run upgrades and do other changes to the raspberry setup, simply remove the init= # entry from the cmdline.txt file and reboot, make the changes, add the init= entry and reboot once more. fail(){ echo -e \u0026#34;$1\u0026#34; /bin/bash } # Load overlay module modprobe overlay if [ $? -ne 0 ]; then fail \u0026#34;ERROR: missing overlay kernel module\u0026#34; fi # Mount /proc mount -t proc proc /proc if [ $? -ne 0 ]; then fail \u0026#34;ERROR: could not mount proc\u0026#34; fi # Create a writable fs on /mnt to then create our mountpoints mount -t tmpfs inittemp /mnt if [ $? -ne 0 ]; then fail \u0026#34;ERROR: could not create a temporary filesystem to mount the base filesystems for overlayfs\u0026#34; fi # Mount a tmpfs under /mnt/rw mkdir /mnt/rw mount -t tmpfs root-rw /mnt/rw if [ $? -ne 0 ]; then fail \u0026#34;ERROR: could not create tempfs for upper filesystem\u0026#34; fi # Identify root fs device, PARTUUID, mount options and fs type #rootDev=`blkid -o list | awk \u0026#39;$3 == \u0026#34;/\u0026#34; {print $1}\u0026#39;` # Changed here(point to / ) in case the cmd above doesn\u0026#39;t work # By ChenYang 20171122 rootDev=/dev/mmcblk0p2 rootPARTUUID=`awk \u0026#39;$2 == \u0026#34;/\u0026#34; {print $1}\u0026#39; /etc/fstab` rootMountOpt=`awk \u0026#39;$2 == \u0026#34;/\u0026#34; {print $4}\u0026#39; /etc/fstab` rootFsType=`awk \u0026#39;$2 == \u0026#34;/\u0026#34; {print $3}\u0026#39; /etc/fstab` # Mount original root filesystem readonly under /mnt/lower mkdir /mnt/lower mount -t ${rootFsType} -o ${rootMountOpt},ro ${rootDev} /mnt/lower if [ $? -ne 0 ]; then fail \u0026#34;ERROR: could not ro-mount original root partition\u0026#34; fi # Mount the overlay filesystem mkdir /mnt/rw/upper mkdir /mnt/rw/work mkdir /mnt/newroot mount -t overlay -o lowerdir=/mnt/lower,upperdir=/mnt/rw/upper,workdir=/mnt/rw/work overlayfs-root /mnt/newroot if [ $? -ne 0 ]; then fail \u0026#34;ERROR: could not mount overlayFS\u0026#34; fi # Create mountpoints inside the new root filesystem-overlay mkdir /mnt/newroot/ro mkdir /mnt/newroot/rw # Remove root mount from fstab (this is already a non-permanent modification) grep -v \u0026#34;$rootPARTUUID\u0026#34; /mnt/lower/etc/fstab \u0026gt; /mnt/newroot/etc/fstab echo \u0026#34;#the original root mount has been removed by overlayRoot.sh\u0026#34; \u0026gt;\u0026gt; /mnt/newroot/etc/fstab echo \u0026#34;#this is only a temporary modification, the original fstab\u0026#34; \u0026gt;\u0026gt; /mnt/newroot/etc/fstab echo \u0026#34;#stored on the disk can be found in /ro/etc/fstab\u0026#34; \u0026gt;\u0026gt; /mnt/newroot/etc/fstab # Change to the new overlay root cd /mnt/newroot pivot_root . mnt exec chroot . sh -c \u0026#34;$(cat \u0026lt;\u0026lt;END # Move ro and rw mounts to the new root mount --move /mnt/mnt/lower/ /ro if [ $? -ne 0 ]; then echo \u0026#34;ERROR: could not move ro-root into newroot\u0026#34; /bin/bash fi mount --move /mnt/mnt/rw /rw if [ $? -ne 0 ]; then echo \u0026#34;ERROR: could not move tempfs rw mount into newroot\u0026#34; /bin/bash fi # Unmount unneeded mounts so we can unmout the old readonly root umount /mnt/mnt umount /mnt/proc umount /mnt/dev umount /mnt # Continue with regular init exec /sbin/init END )\u0026#34; 脚本添加权限 touch overlayRoot.sh cp overlayRoot.sh /sbin/overlayRoot.sh chmod a+x /sbin/overlayRoot.sh apt-get install util-linux 在zshrc中创建函数 function reboot_rw(){ sed -i \u0026#39;s#\\/boot vfat defaults,ro#\\/boot vfat defaults#g\u0026#39; /etc/fstab \u0026amp;\u0026amp; \\ mount -o remount,rw /boot \u0026amp;\u0026amp; \\ sed -i \u0026#39;s/ init=\\/sbin\\/overlayRoot.sh//g\u0026#39; /boot/cmdline.txt \u0026amp;\u0026amp; \\ reboot } function reboot_ro() { sed -i \u0026#39;s#\\/boot vfat defaults#\\/boot vfat defaults,ro#g\u0026#39; /etc/fstab \u0026amp;\u0026amp; \\ mount -o remount,rw /boot \u0026amp;\u0026amp; \\ sed -i \u0026#39;s/\\($\\)/ init=\\/sbin\\/overlayRoot.sh/g\u0026#39; /boot/cmdline.txt \u0026amp;\u0026amp; \\ reboot } 留存，已弃用。以下，在 tf 卡上面进行试验，没有成功 #mkdir -p /media/usb/boot /media/usb/system #mount /dev/sdd1 /media/usb/boot #mount /dev/sdd2 /media/usb/system #fdisk /mnt/pve/Media/share/Downloads/Compressed/iso/2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img #mkdir /tmp/boot #mount -o loop,offset=4194304 /mnt/pve/Media/share/Downloads/Compressed/iso/2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img /tmp/boot #rsync -Pa /tmp/boot/ /media/usb/boot/ #sync #umount /tmp/boot #mount -o loop,offset=268435456 /mnt/pve/Media/share/Downloads/Compressed/iso/2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img /media/usb/system #sync #blkid #/dev/sdd1: LABEL=\u0026#34;piboot\u0026#34; UUID=\u0026#34;05BD-5E21\u0026#34; TYPE=\u0026#34;vfat\u0026#34; PARTUUID=\u0026#34;d82e0cba-01\u0026#34; #/dev/sdd2: LABEL=\u0026#34;pisystem\u0026#34; UUID=\u0026#34;5562217c-3911-6542-a8f4-4e46b96f5c68\u0026#34; TYPE=\u0026#34;ext4\u0026#34; PARTUUID=\u0026#34;d82e0cba-02\u0026#34; ## 得到 d82e0cba,将一下文件中相应的PARTUUID进行更改 #vi /media/usb/boot/cmdline.txt #vi /media/usb/system/etc/fstab #umount /media/usb/boot #umount /media/usb/system docker化 # whoami, pi sudo ln -s /media/share-hm/bkp/docker_rasp/docker_data docker_data sudo ln -s /media/share-hm/bkp/docker_rasp/docker_config docker_config # kodbox #docker run -itd --restart=always --name=kodbox -p 30100:80 -v ~/docker_data/kodbox:/var/www/html kodcloud/kodbox:v1.15 #sudo git clone --depth=1 https://hub.fastgit.org/evling2020/kodbox.git #web: # 30100:80 # 30101:443 openwrt lxc形式 pve,lxc 安装 openwrt, 目前不好用, 参考PVE 用 LXC 几乎完美运行 openwrt 更新无需编译内核支持 fullconenat - 软路由,x86 系统,openwrt(x86),Router OS 等 - 恩山无线论坛 - Powered by Discuz!\npct create 103 /mnt/pve/Media/template/cache/openwrt-x86-64-generic-rootfs.tar.gz --rootfs local:1 --ostype unmanaged --hostname OpenWrt --arch amd64 --cores 2 --memory 512 --swap 1024 -net0 bridge=vmbr0,name=eth0 vim /etc/pve/lxc/103.conf lxc.mount.auto: cgroup:rw lxc.mount.auto: proc:rw lxc.mount.auto: sys:rw lxc.include: /usr/share/lxc/config/openwrt.common.conf lxc.cap.drop: sys_admin lxc.apparmor.profile: unconfined lxc.cgroup.devices.allow: c 108:0 rwm lxc.autodev: 1 lxc.cgroup.devices.allow: c 10:200 rwm lxc.hook.autodev: /var/lib/lxc/103/device_hook.sh lxc.mount.entry: tmp tmp tmpfs rw,nodev,relatime,mode=1777 0 0 cp /mnt/pve/Media/share/Downloads/Compressed/openwrt/device_hook.sh /var/lib/lxc/103/device_hook.sh chmod +x /var/lib/lxc/103/device_hook.sh 添加网卡vmbr1 # op命令行 # 进到op命令行 mv /sbin/modprode sbin/mde 因为在lxc里面不能调起modprode的，一般应用会判断有没有这个，没有就会用insmod mv /sbin/modprode sbin/mde #修正主页显示 #以下去掉lan口显示报错 vim /usr/lib/lua/luci/view/admin_status/index.htm 修改local eth_info = luci.sys.exec(\u0026#34;ethinfo\u0026#34;)成 local eth_info = nil 改完后不再显示lan口，日志也不会出现报错 #以下修改最大连接数因为在lxc里面是获取不到那个参数 local conn_max = xxx 修改为下面 local conn_max = tonumber(luci.sys.exec( \u0026#34;sysctl -n -e net.netfilter.nf_conntrack_max net.ipv4.netfilter.ip_conntrack_max\u0026#34; ):match(\u0026#34;%d+\u0026#34;)) or 4096 # 修改网址 vi /etc/config/network /etc/init.d/network restart [HomeLede 开箱 基础操作 修改路由IP · xiaoqingfengATGH/HomeLede Wiki](https://github.com/xiaoqingfengATGH/HomeLede/wiki/HomeLede-%E5%BC%80%E7%AE%B1-%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C-%E4%BF%AE%E6%94%B9%E8%B7%AF%E7%94%B1IP) uci get network.lan.ipaddr uci set network.lan.ipaddr=\u0026#39;192.168.31.3\u0026#39; uci commit network uci get dhcp.lan.dhcp_option uci delete dhcp.lan.dhcp_option uci add_list dhcp.lan.dhcp_option=\u0026#39;6,192.168.31.3\u0026#39; uci commit dhcp reboot # web登录，root/password 虚拟机形式 安装 openwrt 虚拟机，目前使用虚拟机的形式 OpenWrt 中，旁路由的设置与使用 - 知乎 PVE 安装 Openwrt/LEDE 软路由保姆级图文教程 - 十佳测评 主要使用的版本 2, 找不到源头了 3， sirpdboy/openwrt: openwrt 4, 常见问题 · xiaoqingfengATGH/HomeLede Wiki cd /mnt/sdb/template/iso # openwrt-x86-64-combined-squashfs.img # chmod +x img2kvm \u0026amp;\u0026amp; ./img2kvm openwrt-x86-64-combined-squashfs.img 102 Media gzip -d openwrt.img.gz qm importdisk 103 ./openwrt.img sdb # 添加硬盘，更改为stat0，修改引导顺序 # 启动, 修改网络 # 修改lan接口，配置好旁路由 vi /etc/config/network # 添加zerotier支持 # 更改端口、密钥 # 更改ssr支持 iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE # dns 119.29.29.29,182.254.118.118,223.5.5.5,223.6.6.6,180.76.76.76,1.2.4.8,210.2.4.8,156.154.70.22,1.0.0.1 # ipv4地址手动，DNS手动，配置网关和dns均为：192.168.31.2 # debian修改网关、dns 旁路由支持 ipv6, 参考【终极教程】N1 做旁路由，IPv6 设置教程，超详细 - 斐讯无线路由器以及其它斐迅网络设备 - 恩山无线论坛 - Powered by Discuz! 没有试验成功，小米找不到 dhcpv6 服务器的支持 目前停留在 lan6的配置 ","permalink":"https://suai.tk/posts/best_raspberry/","summary":"树莓派 系统安装 github仓库：Debian-Pi-Aarch64/README_zh.md at master · openfans-community-offical/Debian-Pi-Aarch64 # md5校验 20b944d9645de361568a2f3e310f925e ./2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img 296cfa92e91d8c92324c2dcbb142ea92 ./2021-01-03-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release-plus++.img.xz # vim /etc/ssh/sshd_config PermitRootLogin yes systemctl disable network-manager # 安装zerotier curl -s https://install.zerotier.com | sudo bash sudo zerotier-cli join 6ab565387a498da5 sudo systemctl enable zerotier-one sudo systemctl status zerotier-one 系统备份 备份脚本,以 root 的身份。nanhantianyi/rpi-backup: raspberry pi backup，树莓派系统备份，最小镜像备份 git clone --depth=1 https://hub.fastgit.org/nanhantianyi/rpi-backup.git # 安装7z sudo apt install p7zip-full mkdir -p /media/share-hm/share/bkp/rasp cd /media/share-hm/share/bkp/rasp bash ~/rpi-backup/back.sh raspberry-stable-v2raya-1230.img 7z a raspberry-stable.img.7z raspberry-stable.img bash ~/rpi-backup/back.","title":"最佳实践-树莓派"},{"content":"QQ404 公益 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta char-set=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;404\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; herf=\u0026#34;image/YTHP_icon.ico\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\u0026#34; charset=\u0026#34;utf-8\u0026#34; homePageUrl=\u0026#34;product.php\u0026#34; homePageName=\u0026#34;返回\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ","permalink":"https://suai.tk/posts/404_pages/","summary":"QQ404 公益 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta char-set=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;404\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; herf=\u0026#34;image/YTHP_icon.ico\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\u0026#34; charset=\u0026#34;utf-8\u0026#34; homePageUrl=\u0026#34;product.php\u0026#34; homePageName=\u0026#34;返回\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ","title":"404公益"},{"content":"selenimu + webdriver python -m pip install selenium apt upgrade -y \u0026amp;\u0026amp; apt update -y wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026amp;\u0026amp; sudo apt-get -f install \u0026amp;\u0026amp; dpkg -i google-chrome-stable_current_amd64.deb google-chrome --version # http://chromedriver.storage.googleapis.com/index.html wget http://chromedriver.storage.googleapis.com/87.0.4280.20/chromedriver_linux64.zip unzip chromedriver_linux64.zip whereis google-chrome chromedriver --version 脚本编写 import os from selenium import webdriver from selenium.webdriver.chrome.options import Options chrome_options = Options() chrome_options.add_argument(\u0026#34;--no-sandbox\u0026#34;) chrome_options.add_argument(\u0026#34;--headless\u0026#34;) chrome_options.add_argument(\u0026#34;--disable-dev-shm-usage\u0026#34;) chrome_options.add_argument(\u0026#34;--disable-gpu\u0026#34;) chrome_options.add_argument(\u0026#34;--hide-scrollbars\u0026#34;) chrome_options.add_argument(\u0026#34;blink-settings=imagesEnabled=false\u0026#34;) d = webdriver.Chrome(r\u0026#34;/usr/bin/chromedriver\u0026#34;, chrome_options=chrome_options) d.get(\u0026#34;https://www.baidu.com\u0026#34;) print(\u0026#34;hao123\u0026#34; in d.page_source) d.close() ","permalink":"https://suai.tk/posts/best_python_scripy/","summary":"selenimu + webdriver python -m pip install selenium apt upgrade -y \u0026amp;\u0026amp; apt update -y wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \u0026amp;\u0026amp; sudo apt-get -f install \u0026amp;\u0026amp; dpkg -i google-chrome-stable_current_amd64.deb google-chrome --version # http://chromedriver.storage.googleapis.com/index.html wget http://chromedriver.storage.googleapis.com/87.0.4280.20/chromedriver_linux64.zip unzip chromedriver_linux64.zip whereis google-chrome chromedriver --version 脚本编写 import os from selenium import webdriver from selenium.webdriver.chrome.options import Options chrome_options = Options() chrome_options.add_argument(\u0026#34;--no-sandbox\u0026#34;) chrome_options.add_argument(\u0026#34;--headless\u0026#34;) chrome_options.add_argument(\u0026#34;--disable-dev-shm-usage\u0026#34;) chrome_options.add_argument(\u0026#34;--disable-gpu\u0026#34;) chrome_options.add_argument(\u0026#34;--hide-scrollbars\u0026#34;) chrome_options.add_argument(\u0026#34;blink-settings=imagesEnabled=false\u0026#34;) d = webdriver.Chrome(r\u0026#34;/usr/bin/chromedriver\u0026#34;, chrome_options=chrome_options) d.get(\u0026#34;https://www.baidu.com\u0026#34;) print(\u0026#34;hao123\u0026#34; in d.page_source) d.close() ","title":"最佳实践-Python爬虫"},{"content":"安装 zsh apt install -y zsh zsh --version \u0026amp;\u0026amp; chsh -s $(which zsh) echo $SHELL \u0026amp;\u0026amp; $SHELL --version # if fail exit # new terminal, zsh 问题：zsh: corrupt history file /home/pi/.zsh_history cp .zsh_history zsh_history \u0026amp;\u0026amp; rm -f .zsh_history \u0026amp;\u0026amp; strings zsh_history .zsh_history zinit 优化 仓库地址，zinit, 安装依赖 # 安装依赖 sudo apt install subversion make gcc -y curl -R -O http://www.lua.org/ftp/lua-5.4.4.tar.gz \u0026amp;\u0026amp; tar zxf lua-5.4.4.tar.gz cd lua-5.4.4 \u0026amp;\u0026amp; make all test \u0026amp;\u0026amp; make install lua -v \u0026amp;\u0026amp; cd .. rm -rf lua-5.4.4* 安装zinit 一键安装 bash -c \u0026#34;$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)\u0026#34; 离线安装，下载地址 下载后安装 bash install.sh zshrc文件 # .zshrc 文件 # vim ~/.zshrc # source \u0026#34;$HOME/.zinit/bin/zinit.zsh\u0026#34; # autoload -Uz _zinit # (( ${+_comps} )) \u0026amp;\u0026amp; _comps[zinit]=_zinit # common alias ls=\u0026#34;ls --color=auto\u0026#34; alias ll=\u0026#39;ls -AFhlt\u0026#39; alias la=\u0026#39;ll\u0026#39; alias tree=\u0026#39;tree -C --dirsfirst\u0026#39; alias cls=\u0026#39;clear\u0026#39; alias ping=\u0026#39;ping -c 5\u0026#39; alias ports=\u0026#39;netstat -tulanp\u0026#39; alias sj=\u0026#39;date +\u0026#34;%Y-%m-%d %T\u0026#34;\u0026#39; # 查找 alias grc1=\u0026#34;grep -inrE -C1 --color=auto\u0026#34; alias grc2=\u0026#34;grep -inrE -C2 --color=auto\u0026#34; alias grp=\u0026#34;grep -inrE --color=auto\u0026#34; # 数据传输 alias rsync-copy=\u0026#34;rsync -avz --progress -h\u0026#34; alias rsync-move=\u0026#34;rsync -avz --progress -h --remove-source-files\u0026#34; alias rsync-update=\u0026#34;rsync -avzu --progress -h\u0026#34; alias rsync-synchronize=\u0026#34;rsync -avzu --delete --progress -h\u0026#34; alias rsync-move-nas=\u0026#34;rsync -avz --progress -h --remove-source-files -e \u0026#39;ssh -p xxx -i ~/.ssh/nas/pve_rasp_id_rsa\u0026#39;\u0026#34; # 代理 alias rproxy=\u0026#34;export ALL_PROXY=socks5://192.168.31.x:10xxx\u0026#34; alias uproxy=\u0026#34;unset ALL_PROXY\u0026#34; alias cip=\u0026#34;curl cip.cc\u0026#34; # 快速目录跳转 zinit ice lucid wait=\u0026#39;1\u0026#39; zinit light skywind3000/z.lua # 语法高亮 zinit ice lucid wait=\u0026#39;0\u0026#39; atinit=\u0026#39;zpcompinit\u0026#39; zinit light zdharma-continuum/fast-syntax-highlighting # 自动建议 zinit ice lucid wait=\u0026#34;0\u0026#34; atload=\u0026#39;_zsh_autosuggest_start\u0026#39; zinit light zsh-users/zsh-autosuggestions # 补全 zinit ice lucid wait=\u0026#39;0\u0026#39; zinit light zsh-users/zsh-completions # vi zinit ice depth=1 zinit light jeffreytse/zsh-vi-mode # command-not-find zinit ice wait zinit snippet OMZ::plugins/command-not-found/command-not-found.plugin.zsh # 加载 OMZ 框架及部分插件 # plugins=(git sudo z extract vi-mode colorize rsync history zsh-autosuggestions zsh-syntax-highlighting ) zinit snippet OMZ::lib/completion.zsh zinit snippet OMZ::lib/history.zsh zinit snippet OMZ::lib/key-bindings.zsh zinit snippet OMZ::lib/theme-and-appearance.zsh zinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh zinit snippet OMZ::plugins/sudo/sudo.plugin.zsh zinit ice svn zinit snippet OMZ::plugins/extract zinit ice lucid wait=\u0026#39;1\u0026#39; zinit snippet OMZ::plugins/git/git.plugin.zsh # 加载 pure 主题 zinit ice pick\u0026#34;async.zsh\u0026#34; src\u0026#34;pure.zsh\u0026#34;; zinit light sindresorhus/pure zinit ice depth=1; zinit light romkatv/powerlevel10k # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh. # [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh 加载及更新 source ~/.zshrc zinit self-update \u0026amp;\u0026amp; zinit update oh-my-zsh(已用zinit替代) ## 离线脚本安装 # https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh 另存为 install.sh，上传至vps sftp -P 6868 root@172.20.16.155 put install.sh sftp -i \u0026#34;C:/Users/xiaomanman/.ssh/zy/id_rsa\u0026#34; -P 6868 suai@192.168.196.155 sftp -i \u0026#34;C:\\Users\\xiaomanman\\.ssh\\pve\\lxc_debian_id_rsa\u0026#34; -P 6868 root@192.168.196.132 bash install.sh sudo vim /etc/hosts 151.101.76.133 raw.githubusercontent.com ## 在线脚本安装 screen -S oh-my-zsh sh -c \u0026#34;$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\u0026#34; # 安装失败后卸载 bash ~/.oh-my-zsh/tools/uninstall.sh -y # install #git clone git://github.com/joelthelion/autojump.git \u0026amp;\u0026amp; cd autojump \u0026amp;\u0026amp; ./install.py git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions git clone --depth=1 https://hub.fastgit.org/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting # 安装到不同的文件夹 sudo chown -R suai:suai zsh-syntax-highlighting git clone git://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/plugins/zsh-autosuggestions git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k # 部分自带插件: sudo apt install python3-pip -y sudo ln -s /usr/bin/pip3 /usr/bin/pip sudo pip install pygments extract # extract files # ccat/cless plugins=(git sudo z extract colorize vi-mode zsh-autosuggestions zsh-syntax-highlighting ) # Oh-My-Zsh 的默认配置文件在：~/.zshrc。编辑～/.zshrc 修改主题，这里我用的是 ys 主题，更多主体看[这里](https://github.com/robbyrussell/oh-my-zsh/wiki/Themes) vim ~/.zshrc ZSH_THEME=\u0026#34;powerlevel10k/powerlevel10k\u0026#34; source ~/.zshrc ","permalink":"https://suai.tk/posts/best_zsh/","summary":"安装 zsh apt install -y zsh zsh --version \u0026amp;\u0026amp; chsh -s $(which zsh) echo $SHELL \u0026amp;\u0026amp; $SHELL --version # if fail exit # new terminal, zsh 问题：zsh: corrupt history file /home/pi/.zsh_history cp .zsh_history zsh_history \u0026amp;\u0026amp; rm -f .zsh_history \u0026amp;\u0026amp; strings zsh_history .zsh_history zinit 优化 仓库地址，zinit, 安装依赖 # 安装依赖 sudo apt install subversion make gcc -y curl -R -O http://www.lua.org/ftp/lua-5.4.4.tar.gz \u0026amp;\u0026amp; tar zxf lua-5.4.4.tar.gz cd lua-5.4.4 \u0026amp;\u0026amp; make all test \u0026amp;\u0026amp; make install lua -v \u0026amp;\u0026amp; cd .","title":"最佳实践-ZSH"},{"content":"大文件清理 du -h --max-depth=1 | grep G | sort -n cron 20 12 17-20 11 * /home/esm/esm-env/bin/python /home/esm/cfg/esm.py \u0026gt;\u0026gt; /home/esm/esm.log 2\u0026gt;\u0026amp;1 \u0026amp; 0 21 * * * nohup pipenv run python ./lexin_m.py \u0026gt;/dev/null 2\u0026gt;log \u0026amp; 0 4 */3 * * /sbin/shutdown -r +1 \u0026gt;\u0026gt; /root/log/reboot.log 2\u0026gt;\u0026amp;1 \u0026amp; # 重新选择编辑器 select-editor 删除文件 find . -ctime +12 -iname \u0026#34;*.img\u0026#34; -print | xargs -i rm -rf {} ; find . -size -100M \\( -iname \u0026#34;*.img\u0026#34; -o -iname \u0026#34;*.7z\u0026#34; \\) -print | xargs -i rm -rf {} ; 批量重命名 rename \u0026#39;s/S00/S01/\u0026#39; *.mp4 sql表使用统计 # awk 可能会出现错误 grep -inrE \u0026#39;(from|join)\u0026#39; zh_dm_mbgl_wdb.sh | awk -v FS=\u0026#39;(from|FROM|join|JOIN)\u0026#39; \u0026#39;$2 !~ /@/ {print $2}\u0026#39; | awk -F \u0026#34; \u0026#34; \u0026#39;$1 ~ /std/ {print $1}\u0026#39; | sort | uniq -c | sort -rn | sed \u0026#39;/(/d\u0026#39; | sed \u0026#39;/)/d\u0026#39; ","permalink":"https://suai.tk/posts/best_scripts/","summary":"大文件清理 du -h --max-depth=1 | grep G | sort -n cron 20 12 17-20 11 * /home/esm/esm-env/bin/python /home/esm/cfg/esm.py \u0026gt;\u0026gt; /home/esm/esm.log 2\u0026gt;\u0026amp;1 \u0026amp; 0 21 * * * nohup pipenv run python ./lexin_m.py \u0026gt;/dev/null 2\u0026gt;log \u0026amp; 0 4 */3 * * /sbin/shutdown -r +1 \u0026gt;\u0026gt; /root/log/reboot.log 2\u0026gt;\u0026amp;1 \u0026amp; # 重新选择编辑器 select-editor 删除文件 find . -ctime +12 -iname \u0026#34;*.img\u0026#34; -print | xargs -i rm -rf {} ; find . -size -100M \\( -iname \u0026#34;*.","title":"常用小脚本"},{"content":"python手动安装 apt update apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev curl libbz2-dev curl -O https://www.python.org/ftp/python/3.9.1/Python-3.9.1.tar.xz tar -xf Python-* \u0026amp;\u0026amp; cd Python-* ./configure --enable-optimizations \u0026amp;\u0026amp; make altinstall rm -rf Python-* # 如果安装出错 # E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable) # E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it? sudo lsof /var/lib/dpkg/lock sudo kill -9 \u0026lt;pid\u0026gt; sudo rm /var/lib/dpkg/lock sudo dpkg --configure -a pip curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py # 下载安装脚本 python get-pip.py # 运行安装脚本 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 切换版本 软连接新版本 whereis python sudo ln -s /usr/local/bin/python3.9 /usr/bin/python3 sudo rm /usr/bin/python sudo ln -s /usr/bin/python3 /usr/bin/python 使用update-alternatives update-alternatives --list python #注意：update-alternatives --install \u0026lt;link\u0026gt; \u0026lt;name\u0026gt; \u0026lt;path\u0026gt; \u0026lt;priority\u0026gt; #1.\u0026lt;link\u0026gt;一般情况下，直接使用 /usr/bin/python 即可 #2.\u0026lt;name\u0026gt;即为需要更换的python #3.\u0026lt;path\u0026gt;为需要添加的python版本的安装路径，可以在上文中确定 #4.\u0026lt;priorit\u0026gt;为优先级。数字越大，优先级越高 update-alternatives --install /usr/bin/python python /usr/local/bin/python3.10 3 update-alternatives --install /usr/bin/python python /usr/bin/python3.7 2 update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1 update-alternatives --config python 包管理 PDM pdm --pep582 \u0026gt;\u0026gt; ~/.zshrc pdm config --local pypi.url https://pypi.tuna.tsinghua.edu.cn/simple vscode pylance提示导入模块有问题, 在配置中添加项目根目录 \u0026#34;python.analysis.extraPaths\u0026#34;: [ \u0026#34;./src\u0026#34;,\u0026#34;./python\u0026#34; // 自定义模块的相对路径，可多个，可绝对路径 \u0026#34;./modules\u0026#34; ] ","permalink":"https://suai.tk/posts/best_python/","summary":"python手动安装 apt update apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev curl libbz2-dev curl -O https://www.python.org/ftp/python/3.9.1/Python-3.9.1.tar.xz tar -xf Python-* \u0026amp;\u0026amp; cd Python-* ./configure --enable-optimizations \u0026amp;\u0026amp; make altinstall rm -rf Python-* # 如果安装出错 # E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable) # E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it? sudo lsof /var/lib/dpkg/lock sudo kill -9 \u0026lt;pid\u0026gt; sudo rm /var/lib/dpkg/lock sudo dpkg --configure -a pip curl https://bootstrap.","title":"Python学习"},{"content":"摘要 进行git的学习，整理，随时备查 github/learngit\ngit proxy tee -a ~/.gitconfig\u0026lt;\u0026lt;EOF [http] proxy = socks5://192.168.31.2:10068 EOF git submodule git --version git submodule add http://g.xxx.top/root/esm.git src/esm vim .gitignore git rm --cached esm rm -rf 子模块目录 删除子模块目录及源码 vi .gitmodules 删除项目目录下.gitmodules文件中子模块相关条目 vi .git/config 删除配置项中子模块相关条目 rm .git/module/* 删除模块下的子模块目录，每个子模块对应一个目录，注意只删除对应的子模块目录即可 执行完成后，再执行添加子模块命令即可，如果仍然报错，执行如下： git rm --cached 子模块名称 完成删除后，提交到仓库即可。 git不显示中文 vim ~/.gitconfig [gui] encoding = utf-8 # 代码库统一使用utf-8 [i18n] commitencoding = utf-8 # log编码 [svn] pathnameencoding = utf-8 # 支持中文路径 [core] quotepath = false # status引用路径不再是八进制（反过来说就是允许显示中文了） ","permalink":"https://suai.tk/posts/best_git/","summary":"摘要 进行git的学习，整理，随时备查 github/learngit\ngit proxy tee -a ~/.gitconfig\u0026lt;\u0026lt;EOF [http] proxy = socks5://192.168.31.2:10068 EOF git submodule git --version git submodule add http://g.xxx.top/root/esm.git src/esm vim .gitignore git rm --cached esm rm -rf 子模块目录 删除子模块目录及源码 vi .gitmodules 删除项目目录下.gitmodules文件中子模块相关条目 vi .git/config 删除配置项中子模块相关条目 rm .git/module/* 删除模块下的子模块目录，每个子模块对应一个目录，注意只删除对应的子模块目录即可 执行完成后，再执行添加子模块命令即可，如果仍然报错，执行如下： git rm --cached 子模块名称 完成删除后，提交到仓库即可。 git不显示中文 vim ~/.gitconfig [gui] encoding = utf-8 # 代码库统一使用utf-8 [i18n] commitencoding = utf-8 # log编码 [svn] pathnameencoding = utf-8 # 支持中文路径 [core] quotepath = false # status引用路径不再是八进制（反过来说就是允许显示中文了） ","title":"Git学习"},{"content":"虚拟机集群 常规配置 换源 vps 可不用换源\n# 更换源 cp -a /etc/apt/sources.list /etc/apt/sources.list.bak ## 如果失效，则使用下方的 sed -i \u0026#34;s@http://ftp.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g\u0026#34; /etc/apt/sources.list sed -i \u0026#34;s@http://security.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g\u0026#34; /etc/apt/sources.list # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free apt install apt-transport-https ca-certificates apt update 加速 github仓库Chikage0o0/Linux-NetSpeed: 将Linux现常用的网络加速集成在一起 开启ssh service ssh status, 通过配置 hosts.allow 和 hosts.deny 文件允许或禁止 ssh 或 telnet 操作 - 诸子流 - 博客园 sudo vim /etc/ssh/sshd_config Port xxxx PermitRootLogin yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys # 不要关闭连接, 在新连接中执行以下语句 systemctl restart sshd.service ## 一键替换 sed -i \u0026#34;s/#Port 22/Port 6868/\u0026#34; /etc/ssh/sshd_config # sed -i \u0026#34;s/ListenStream=22/ListenStream=6868/\u0026#34; /etc/systemd/system/sockets.target.wants/ssh.socket # 传送好密钥，并确保可登录后，再禁用掉密码登录 PasswordAuthentication no 配置密钥 清除过旧数据, ssh-keygen -R [172.20.16.163]:xxx 添加ssh登录密钥 # C:/Users/username/.ssh/config # ~/.ssh/config Host lxc_centos HostName 192.168.31.xxx User root Port xxx IdentityFile \u0026#34;~/.ssh/lxc_rsa\u0026#34; 通用配置方式 NAME_IDRSA=\u0026#34;xxx@xxx.nas\u0026#34; FILE_IDRSA=\u0026#34;C:/Users/username/.ssh/pve/xxx_rsa\u0026#34; PORT=xxx IP_ADDR=\u0026#34;root@192.168.31.xxx\u0026#34; ssh-keygen -t rsa -C ${NAME_IDRSA} -f ${FILE_IDRSA} ssh-copy-id -i ${FILE_IDRSA} -p ${PORT} ${IP_ADDR} 问题解决 #sign_and_send_pubkey: signing failed: agent refused operation ssh-add cc8 deepin centos ssh-add -l # WARNING: UNPROTECTED PRIVATE KEY FILE!, too open sudo chmod 700 \u0026#39;.ssh/*id_rsa\u0026#39; 静态 ip cp /etc/network/interfaces /etc/network/interfaces.bkp vim /etc/network/interfaces auto ensXX iface ensXX inet static address 192.168.31.xxx netmask 255.255.255.0 # 设置网关 # gateway 192.168.31.2 gateway 192.168.31.1 dns-nameservers 192.168.31.x 192.168.31.1 apt install resolvconf cp -p /etc/resolvconf/resolv.conf.d/head /etc/resolvconf/resolv.conf.d/head.orig vim /etc/resolvconf/resolv.conf.d/head nameserver 192.168.31.2 nameserver 192.168.31.1 # nameserver 8.8.8.8 # nameserver 114.114.114.114 systemctl restart networking.service reboot # init 6 基础软件配置 安装基本软件 # 更新 apt update -y \u0026amp;\u0026amp; apt install sudo -y apt upgrade -y apt install -y git vim wget screen curl dnsutils rclone # sudo vim /etc/vim/vimrc tee -a /etc/vim/vimrc\u0026lt;\u0026lt;EOF syntax on set smartcase set number set shiftwidth=4 set tabstop=4 set expandtab EOF # vim paste 格式错乱 1. 先设定, `set paste` 2. 插入模式，粘贴 禁用启动项 systemd-analyze blame systemctl disable pve-daily-update.service systemctl disable apt-daily.service systemctl disable apt-daily-upgrade.service 配置 swap sudo swapon --show sudo fallocate -l 1G /swapfile \u0026amp;\u0026amp; sudo chmod 600 /swapfile sudo mkswap /swapfile \u0026amp;\u0026amp; sudo swapon /swapfile sudo vi /etc/fstab /swapfile swap swap defaults 0 0 sudo swapon --show # 关闭swap sudo swapoff -a vim /etc/fstab, 注释掉swap 设置时间、时区、本地化 sudo apt install ntpdate locales -y \u0026amp;\u0026amp; sudo ntpdate time.windows.com sudo dpkg-reconfigure tzdata sudo dpkg-reconfigure locales # 或者编辑文件 sudo vim /etc/locale.gen #zh_CN.UTF-8 sudo locale-gen localectl set-locale LANG=zh_CN.UTF-8 使用zsh\u0026amp;zinit, 见最佳实践-ZSH 定时备份 # google drive rclone config # bkp.sh #! /bin/bash # rclone sync -Pv --ignore-errors /etc/nginx/conf/conf.d od-me:cc8/nginx/.conf.d echo \u0026#34;-------------`date`开始进行数据备份---------------------\u0026#34; rclone sync -v --ignore-errors /etc/nginx/conf.d od-me:cc8/nginx/conf.d rclone sync -v --ignore-errors /root/src od-me:cc8/src rclone sync -v --ignore-errors /root/dockers od-me:cc8/dockers # rclone sync -v --ignore-errors /etc/frp od-me:cc8/frp/frps rclone sync -v --ignore-errors /root/.config/rclone/rclone.conf od-me:cc8/rclone rclone sync -v --ignore-errors /root/bkp.sh od-me:cc8/rclone echo \u0026#34;-------------`date`数据备份完成---------------------\u0026#34; 穿透及网络安全 zerotier, 局域网内不需要每个都安装, openwrt可开启nat\n常规安装 ## 安装 curl -s https://install.zerotier.com | sudo bash # 如果没有任何反应，可能是因为代理的原因 # 关闭代理，然后source ~/.zshrc sudo zerotier-cli join 6**** sudo systemctl enable zerotier-one https://my.zerotier.com/network/6*** # 如果无法使用systemctl,则添加重启脚本如下 sudo vim /etc/rc.local zerotier-one -d lxc中无法直接是用zerotier。lxc zerotier-one[127]: ERROR: unable to configure virtual network port: could not open TUN/TAP device: No such file or directory vim /etc/pve/lxc/105.conf lxc.cgroup.devices.allow = c 10:200 rwm lxc.hook.autodev = sh -c \u0026#34;modprobe tun; cd ${LXC_ROOTFS_MOUNT}/dev; mkdir net; mknod net/tun c 10 200; chmod 0666 net/tun\u0026#34; zerotier安装在旁路由, 参照里面设置：LEDE旁路由中安装zerotier，内网穿透，访问局域网，极简教程 - LEDE/OpenWRT - KoolShare - 源于玩家 服务玩家 ztklhszno7 iptables -I FORWARD -i ztklhszno7 -j ACCEPT iptables -I FORWARD -o ztklhszno7 -j ACCEPT iptables -t nat -I POSTROUTING -o ztklhszno7 -j MASQUERADE 修改工作机的dns为旁路由，即可使用旁路由的局域网域名 卸载 # 通过dpkg删除zerotier-one服务 dpkg -P zerotier-one # 删除zerotier-one文件夹，该文件夹存储了address地址，删除后再次安装会获得新的address地址 rm -rf /var/lib/zerotier-one/ ZEROTIER使用指引 https://XX.xxx.top/login?redirect=%2Ffiles%2F 1. 安装zerotier软件 2. 加入 6*** 3. 在任务栏的搜索框中，键入“远程桌面连接”，然后选择“远程桌面连接”。 4. 计算机：192.168.31.XXX:3389, 连接 5. 用户名：username，密码：password ufw\napt install ufw -y ufw status|enable|disable|reset # 开放端口 # 允许端口22[80|443]上的所有链接 ufw allow ssh[http|https] # 非正常端口 ufw allow 6868 ufw allow 80/tcp ufw allow 21/udp ufw allow 9000:9010/tcp ufw allow[deny] from 192.168.31.182[0/24] ufw allow from 192.168.31.182 to any port 80 [protol tcp/udp] ufw status verbose ufw deny 80 ufw delete allow http ufw delete deny 22 fail2ban apt install fail2ban -y cp /etc/fail2ban/fail2ban.conf /etc/fail2ban/fail2ban.local ignoreip = 127.0.0.1/8 ::1 192.168.31.0/24 # /etc/fail2ban # fail2ban.conf ：配置文件里面定义了fail2ban记录的日志等级、日志文件的位置以及socket。 # jail.conf 里面定义了对那些服务进行监控，以及使用的一些策略。 apt-get install fail2ban #启动\u0026amp;开机自启 systemctl start fail2ban.service systemctl enable fail2ban.service clamav, 参考ClamAV - Ubuntu中文 可选安装-字体、温度监控等 sudo apt install psensor apt install fonts-firacode fonts-wqy-zenhei -y fc-list | awk \u0026#39;{$1=\u0026#34;\u0026#34;}1\u0026#39; | cut -d: -f1 | sort| uniq Fira Code Retina PROXMOX 硬盘配置 Proxmox VE（PVE）添加硬盘 - 星哥的博客 工具及网络 pvetools工具，ivanhao/pvetools 为pve增加ipv6，增加 ipve6 ## 开启IPV6 vim /etc/hosts -- 10.0.0.100 pvehost.some.domain pvehost pvelocalhost ++ ::ffff:10.0.0.100 pvehost.some.domain pvehost pvelocalhost systemctl restart pveproxy.service # tcp6 0 0 :::8006 :::* LISTEN - Promox VE(PVE)安装虚拟黑群晖实现硬盘休眠避坑指南 - 十佳测评 ata-ST3000DM008_Z294S0UH -\u0026gt; ../../sdb qm set 100 --sata0 /dev/disk/by-id/ata-ST3000DM008_Z294S0UH lxc虚拟机配置 安装lxc相关 配置 lxc 源, 或者访问系统, 其它软件 grep -rn \u0026#34;download.proxmox.com\u0026#34; /usr/share/perl5/PVE/* #查找设定下载源的文件 sed -i.bak \u0026#34;s#http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g\u0026#34; /usr/share/perl5/PVE/APLInfo.pm wget -O /var/lib/pve-manager/apl-info/mirrors.ustc.edu.cn https://mirrors.ustc.edu.cn/proxmox/images/aplinfo-pve-6.dat 使用第三方的lxc镜像。【系统镜像】Debian 10 LXC/OVZ 最新模板 v1.3（开启 SSH、时区、优化） - CXT - Enjoy Life | 生活、技术、交友、分享 安装完成后，配置好linux环境，备份成lxc模板 # 包含了配置好的源、docker、本地化、ssh、字体等等，zsh, ufw /mnt/pve/Media/dump/vzdump-lxc-initial-debian-20210702.tar.gz 安装 lxc, 参考 gienginali - 複製 LXC 虛擬機 cd /mnt/sdb/images cp -r 200 210 cd 210 \u0026amp;\u0026amp; mv vm-200-disk-0.raw vm-210-disk-0.raw cd /etc/pve/nodes/pve/lxc cp 200.conf 210.conf # restore 到113, 无特权的√取消 vim 210.conf # 进行网段扫描，去掉被占用的ip apt install nmap nmap -sP 192.168.31.0/24 cat /proc/net/arp # [在线MAC地址生成器-在线工具](http://www.metools.info/other/o66.html) # 进行ip、mac、硬盘等修改 rootfs: sdb:210/vm-210-disk-0.raw,size=16G mp0: /mnt/pve/Media/share,mp=/home/share # 打开选项-功能-嵌套、NFS、smb/cifs 挂载 pve 目录，强制关闭虚拟机 #pct set 104 -mp0 /mnt/pve/Media/share,mp=/home/share qm stop 101; sleep 3; qm start 101 修改motd、hostname、ssh端口 vim /etc/motd vim /etc/hostname # 修改ssh端口后，ssh开机不自动启动 sed -i \u0026#34;s/#Port 22/Port 12345/\u0026#34; /etc/ssh/sshd_config sed -i \u0026#34;s/ListenStream=22/ListenStream=12345/\u0026#34; /etc/systemd/system/sockets.target.wants/ssh.socket 无法使用docker，operation cps。参考Running Docker on Proxmox - Dan [the] Salmon # In Proxmox, edit the /etc/pve/lxc/\u0026lt;id\u0026gt;.conf file where \u0026lt;id\u0026gt; is the ID given to your container: lxc.apparmor.profile: unconfined lxc.cgroup.devices.allow: a lxc.cap.drop: xxx.conf 参考 #Service Center #1. Dockers # 1. Jellyfin # 2. dl-mltools # 4. aria2-pro # 5. tmm arch: amd64 cores: 3 features: mount=nfs;cifs,nesting=1 hostname: Dockers memory: 4096 mp0: /mnt/sdb/nas,mp=/home/share net0: name=eth0,bridge=vmbr0,firewall=1,gw=192.168.31.1,hwaddr=2A:3D:68:25:EC:06,ip=192.168.31.xxx/24,type=veth onboot: 1 ostype: debian rootfs: sdb:xxx/vm-xxx-disk-0.raw,size=32G startup: order=4 swap: 4096 lxc.cgroup.devices.allow: c 226:0 rwm lxc.mount.entry: /dev/dri/card0 dev/dri/card0 none bind,optional,create=file win10 安装虚拟机 mstsc qm importdisk 101 /var/lib/vz/images/win10.qcow2 Media # virio block 直通 usb dmesg | grep \u0026#39;usb\u0026#39; # 记下要直通的usb序号, 编辑虚拟机conf文件 echo \u0026#34;usb0: host=2-1.4\u0026#34; \u0026gt;\u0026gt; /etc/pve/qemu-server/101.conf qm stop 101;sleep 3; qm start 101 spice 配置 参考：proxmox VE 安装 Windows 虚拟机（包括 virtIO 驱动）及 SPICE 远程桌面配置_墨问西东的博客-CSDN 博客 spice://192.168.31.184:60002,password #远程界面选择服务器节点pve1，选择shell，cd到/etc/pve/qemu-server目录下，服务器上安装的虚拟机配置文件均在此目录下。在虚拟机配置文件中添加一下内容（如100.conf）： z qemu(cd /etc/pve/nodes/pve/qemu-server) args: -spice port=61003,addr=0.0.0.0,password=password,seamless-migration=on #其中，-spice即为配置SPICE； #port为监听端口，一般应大于61001； #addr为容许网络，设置为0.0.0.0为允许任何网络连接； #disable-ticketing为去掉密码验证，如需加密码验证，将此参数改为password=xxxx； #seamless-migration=on为QMP支持。 #设置完毕后在SPICE client端输入spice://ip:61002就可以正常远程连接了。 安装堡垒机(暂定) 安装数据库 mysql 只允许本地局域网连接, ufw allow from 192.168.31.0/24 to any port 6868,3306,6379 proto tcp ufw allow from 192.168.31.0/24 to any port 6380,6381 proto tcp ❯ netstat -tnl Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State tcp 0 0 0.0.0.0:6868 0.0.0.0:* LISTEN tcp 0 0 172.17.0.1:24731 0.0.0.0:* LISTEN mysql官网，MySQL :: Begin Your Download 安装 mysql # 检测是否安装过mysql dpkg -l | grep mysql # 下载mysql配置源 wget -c https://dev.mysql.com/get/mysql-apt-config_0.8.16-1_all.deb # 检测md5 sudo md5sum mysql-apt-config_0.8.16-1_all.deb dpkg -i mysql-apt-config_0.8.16-1_all.deb # 选择8.0及相关tools # 低配置情况下，选择5.7 apt update apt install mysql-server -y 创建数据库、授权 mysql -uroot -p -e \u0026#34;show databases;\u0026#34; # wzd2GEAKQAJBr7cHsVJoaiu6 DB_PASSWORD=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` echo -e \u0026#34;\\033[31m 你的数据库密码是 $DB_PASSWORD \\033[0m\u0026#34; mysql -uroot -p -e \u0026#34;create database if not exists chevereto default charset \u0026#39;utf8\u0026#39;; create user \u0026#39;chv_lxc\u0026#39;@\u0026#39;192.168.31.175\u0026#39; identified with mysql_native_password by \u0026#39;$DB_PASSWORD\u0026#39;; grant all privileges on chevereto.* to \u0026#39;chv_lxc\u0026#39;@\u0026#39;192.168.31.175\u0026#39; with grant option; flush privileges;\u0026#34; # mysql -uroot -p -e \u0026#34;alter user \u0026#39;chv_lxc\u0026#39;@\u0026#39;192.168.31.175\u0026#39; identified with mysql_native_password by \u0026#39;$DB_PASSWORD\u0026#39;;\u0026#34; mysql -uroot -p -e \u0026#34;rename user \u0026#39;jmp_lxc\u0026#39;@\u0026#39;192.168.31.176\u0026#39; to \u0026#39;jmp_lxc\u0026#39;@\u0026#39;192.168.31.100\u0026#39;;grant all privileges on jumpserver.* to \u0026#39;jmp_lxc\u0026#39;@\u0026#39;192.168.31.100\u0026#39; with grant option; flush privileges;\u0026#34; mysql -uroot -p -e \u0026#34;alter user \u0026#39;jmp_lxc\u0026#39;@\u0026#39;192.168.31.176\u0026#39; identified with mysql_native_password by \u0026#39;$DB_PASSWORD\u0026#39;;\u0026#34; mysql -uroot -p -e \u0026#34;alter database jumpserver character set \u0026#39;utf8\u0026#39;;\u0026#34; 数据迁移, MySQL 修改默认存储路径 — 小明也来过的个人博客 systemctl stop mysql.service # 进行备份 cp -a -R /var/lib/mysql /home/share/bkp # 修改配置文件 vim /etc/mysql/mysql.conf.d/mysqld.cnf datadir = /home/share/bkp/mysql mysql -uroot -p -e \u0026#34;show global variables like \u0026#39;%datadir%\u0026#39;;\u0026#34; mysqldump -h 10.1.2.24 -P 3306 -u esm-tmp -p -d mocha \u0026gt; dump.txt /usr/local/mysql/bin/mysqldump -uroot -p -d abc \u0026gt; abc.sql 彻底删除 # 彻底删除mysql dpkg --get-selections | grep mysql apt autoremove mysql-community-server mysql-community-client mysql-common mysql-client mysql-server --purge rm /etc/mysql/ -R \u0026amp;\u0026amp; rm /var/lib/mysql/ -R #apt autoremove apparmor -y apt autoremove \u0026amp;\u0026amp; apt autoclean 连接wsl的mysql sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf # bind-addr 注释掉 sudo service mysql start # 增加开机启动 vim /etc/init.wsl #! /bin/sh /etc/init.d/ssh $1 /etc/init.d/mysql $1 mysql问题解决 如果出现了错误：ERROR 2002 (HY000): Can\u0026rsquo;t connect to local MySQL server through socket \u0026lsquo;/var/run/mysqld/mysqld.sock\u0026rsquo; (2) vim /etc/mysql/my.conf [mysqld] skip-grant-tables systemctl restart mysql mysql -uroot -p flush privileges; set password for \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39;=password(\u0026#39;****\u0026#39;); GRANT ALL PRIVILEGES ON *.* TO \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;****\u0026#39; WITH GRANT OPTION; CREATE USER \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;PASSWORD\u0026#39;; GRANT ALL PRIVILEGES ON *.* TO \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; WITH GRANT OPTION; postgresql 官网DOC # sudo sh -c \u0026#39;echo \u0026#34;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\u0026#34; \u0026gt; /etc/apt/sources.list.d/pgdg.list\u0026#39; # wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - # sudo apt-get update # sudo apt-get -y install postgresql apt-get install postgresql-12 # 验证 sudo -u postgres psql -c \u0026#34;SELECT version();\u0026#34; # 创建用户 待定 DB_PASSWORD=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 24` echo -e \u0026#34;\\033[31m 你的数据库密码是 $DB_PASSWORD \\033[0m\u0026#34; sudo su - postgres -c \u0026#34;create role lxc_gitea login password \u0026#39;$DB_PASSWORD\u0026#39; valid until \u0026#39;infinity\u0026#39;; createdb gitea; grant all privileges on database gitea to lxc_gitea;\u0026#34; 安装redis 安装 redis, 打开选项-功能-嵌套、NFS、smb/cifs\napt install redis-server -y redis-cli ### 2021年12月28日 星期二 redis启动失败，后面无法继续 CONFIG get requirepass CONFIG set requirepass \u0026#34;passwd\u0026#34; auth \u0026#34;passwd\u0026#34; vim /etc/redis/redis.conf bind 127.0.0.1 192.168.31.126 192.168.31.200 192.168.31.201 192.168.31.202 192.168.31.210 192.168.31.211 requirepass passwd systemctl restart redis-server.service 问题解决\necho never 593:M 02 Jul 2021 22:58:31.054 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add \u0026#39;vm.overcommit_memory = 1\u0026#39; to /etc/sysctl.conf and then reboot or run the command \u0026#39;sysctl vm.overcommit_memory=1\u0026#39; for this to take effect. 593:M 02 Jul 2021 22:58:31.054 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command \u0026#39;echo never \u0026gt; /sys/kernel/mm/transparent_hugepage/enabled\u0026#39; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled. never echo never \u0026gt; /sys/kernel/mm/transparent_hugepage/enabled always [madvise] never pid文件 # redis, status, 提示没有pid文件 vim /etc/systemd/system/redis.service [Service] Type=forking ExecStart=/usr/bin/redis-server /etc/redis/redis.conf ExecStop=/bin/kill -s TERM $MAINPID ## 增加下面一行 ExecStartPost=/bin/sh -c \u0026#34;echo $MAINPID \u0026gt; /var/run/redis/redis.pid\u0026#34; PIDFile=/run/redis/redis-server.pid Jumpyserver jumpserver logs 一直在wait redis ## 升级redis到最新版本, lxc_debian,测试失败 # redis-server --version # apt update -y \u0026amp;\u0026amp; apt upgrade -y # cp /etc/redis/redis.conf ~/redis.conf.bkp # export ALL_PROXY=socks5://192.168.31.2:10068 # unset ALL_PROXY # wget -N https://raw.githubusercontent.com/Websoft9/ansible-linux/main/scripts/install.sh; bash install.sh -r redis 配置哨兵模式, 配置并启动主从\ncp /etc/redis/redis.conf /etc/redis/redis-6380.conf cp /etc/redis/redis.conf /etc/redis/redis-6381.conf vim /etc/redis/redis-638*.conf port 638* pidfile /var/run/redis/redis-638*.pid logfile /var/log/redis/redis-638*.log replicaof 127.0.0.1 6379 masterauth nhsVU9z6T\u0026amp;YHH\u0026amp; redis-server /etc/redis/redis-638*.conf ## 查看是否配置成功 redis-cli \u0026gt; auth nhsVU9z6T\u0026amp;YHH\u0026amp; \u0026gt; info Replication # 配置并启动哨兵 vim /etc/redis/sentinel-16379.conf port 16379 daemonize yes dir /var/run/redis/sentinel pidfile /var/run/redis/sentinel/redis-sentinel-16379.pid sentinel monitor mymaster 127.0.0.1 6379 2 sentinel auth-pass mymaster nhsVU9z6T\u0026amp;YHH\u0026amp; sentinel down-after-milliseconds mymaster 5000 sentinel parallel-syncs mymaster 1 sentinel failover-timeout mymaster 15000 cp /etc/redis/sentinel-16379.conf /etc/redis/sentinel-16380.conf cp /etc/redis/sentinel-16379.conf /etc/redis/sentinel-16381.conf redis-server /etc/redis/redis-6380.conf \u0026amp;\u0026amp; redis-server /etc/redis/redis-6381.conf redis-server /etc/redis/sentinel-16379.conf --sentinel \u0026amp;\u0026amp; redis-server /etc/redis/sentinel-16380.conf --sentinel \u0026amp;\u0026amp; redis-server /etc/redis/sentinel-16381.conf --sentinel ## 以下未试验成功 echo “/opt/redis/src/redis-sentinel /main/redis/sentinel.conf” \u0026gt;\u0026gt; /etc/rc.local /usr/bin/redis-server /etc/redis/redis-6379.conf /usr/bin/redis-server /etc/redis/redis-6380.conf /usr/bin/redis-server /etc/redis/redis-6381.conf /usr/bin/redis-server /etc/redis/sentinel-16379.conf --sentinel /usr/bin/redis-server /etc/redis/sentinel-16380.conf --sentinel /usr/bin/redis-server /etc/redis/sentinel-16381.conf --sentinel keepalived, 未成功\napt install keepalived vim /etc/keepalived/check_redis.sh #!/bin/bash \u0026lt;/dev/tcp/127.0.0.1/6379 if [ $? -eq 0 ]; then REDIS_PASSWD=\u0026#39;nhsVU9z6T\u0026amp;YHH\u0026amp;\u0026#39; ROLE=`redis-cli -a ${REDIS_PASSWD} info replication | grep role` MASTER=`echo -e \u0026#34;role:master\\r\\n\u0026#34;` if [ \u0026#34;$ROLE\u0026#34; == \u0026#34;$MASTER\u0026#34; ]; then exit 0 fi # MASTERIP=`ip add | grep 192.168.31.20 | wc -l` # if [ $MASTERIP -eq 0 ]; then # exit 0 # fi fi exit 1 # 编写 Redis 集群切换邮件通知脚本，修改通知标题及正文内容 cp /etc/keepalived/email_tengine.sh /etc/keepalived/email_redis.sh vi /etc/keepalived/email_redis.sh #!/bin/bash contact=\u0026#39;redis@xxx.top\u0026#39; notify() { mailsubject=\u0026#34;[Devops Redis VIP 切换] $(hostname) -\u0026gt; $1\u0026#34; mailbody=\u0026#34;[$(date +\u0026#39;%F %T\u0026#39;)]: Devops Redis VIP 切换, $(hostname) 切换为 $1 ！\u0026#34; echo \u0026#34;$mailbody\u0026#34; | mail -s \u0026#34;$mailsubject\u0026#34; $contact } case $1 in master) notify master ;; backup) notify backup ;; fault) notify fault ;; *) echo \u0026#34;Usage: $(basename $0) {master|backup|fault}\u0026#34; exit 1 ;; esac # 修改keepalived配置，添加一个新的VRRP实例，并添加相关的状态检查脚本 # 注意 keepalived 3个节点须工作在非抢占模式下，角色均设置为BACKUP，优先级相同。 vi /etc/keepalived/keepalived.conf vrrp_script chk_redis { script \u0026#34;/etc/keepalived/check_redis.sh\u0026#34; interval 1 } vrrp_instance VI_REDIS { state BACKUP nopreempt interface bond-app virtual_router_id 52 priority 100 advert_int 1 authentication { auth_type PASS auth_pass xxxxxxxx } virtual_ipaddress { 10.255.200.4/24 } track_script { chk_redis } notify_master \u0026#34;/etc/keepalived/email_redis.sh master\u0026#34; notify_backup \u0026#34;/etc/keepalived/email_redis.sh backup\u0026#34; notify_fault \u0026#34;/etc/keepalived/email_redis.sh fault\u0026#34; } 单机 deepin 安装系统盘，数据盘不要安装，后续再进行分区，然后挂载 git config --global user.name \u0026#34;username\u0026#34; git config --global user.email \u0026#34;username@deepin\u0026#34; 优化启动 systemd-analyze blame systemctl disable[mask] systemctl disable apt-daily.service # NetworkManager-wait-online.service 全盘备份, 定时备份（timemachie) 系统优化 # 进行挂载重命名 sudo e2label /dev/sdb1 \u0026#34;Backup\u0026#34; sudo e2label /dev/sdb2 \u0026#34;Bigdata\u0026#34; # /dev/sdb1 UUID=f20f1458-cd6e-4e5b-be8c-a871045fc7b8 /media/usernaem/backup ext4 defaults 1 1 # /dev/sdb2 UUID=075f4d8b-4740-47d8-8fc6-32c56c820a48 /media/usernaem/bigdata ext4 defaults 1 2 # 测试fstab, 没有错误提示，则是正确的 sudo mount -a 解决21版本中wifi无法搜索问题 主要原因：该问题错误出在驱动程序中，以下说明仅适用于Broadcom。 使用命令，删除Broadcom驱动程序： sudo apt remove --purge broadcom-sta* 使用以下命令从Debian软件包（仅buster-backports）下载新版本的驱动程序： wget http://ftp.ru.debian.org/debian/pool/non-free/b/broadcom-sta/broadcom-sta-common_6.30.223.271-17~bpo10+1_all.deb wget http://ftp.ru.debian.org/debian/pool/non-free/b/broadcom-sta/broadcom-sta-dkms_6.30.223.271-17~bpo10+1_all.deb wget http://ftp.ru.debian.org/debian/pool/non-free/b/broadcom-sta/broadcom-sta-source_6.30.223.271-17~bpo10+1_all.deb 使用以下命令安装驱动程序： sudo dpkg -i broadcom-sta-common_6.30.223.271-15~bpo10+1_all.deb sudo dpkg -i broadcom-sta-dkms_6.30.223.271-15~bpo10+1_all.deb sudo dpkg -i broadcom-sta-source_6.30.223.271-15~bpo10+1_all.deb 终端颜色重新配置 # 代码注释配色反人类，可以用如下方法解决： /usr/share/terminalwidget5/color-schemes/*.colorschme 54: 24, 24, 178 --\u0026gt; 46, 100, 166。 # 安装terminator/tmux sudo apt install terminator tmux # 测试256色 curl -s https://gist.githubusercontent.com/HaleTom/89ffe32783f89f403bba96bd7bcd1263/raw/ | bash ## 如果不支持，开启 #vim ~/.bashrc #增加命令\u0026#34;export TERM=xterm-256color\u0026#34;. # 安装插件 fcitx 配置 sudo vim /usr/share/fcitx/configdesc/config.desc [output] 9 安装 krusader/terminator wget -c https://releases.pagure.org/virt-viewer/virt-viewer-9.0.tar.gz extract virt-viewer-9.0.tar.gz cd virt-viewer-9.0 ./configure --prefix=/usr docker 安装 docker/docker-compose sudo curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun # 安装 docker-compose # debian/centos sudo curl -L \u0026#34;https://get.daocloud.io/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)\u0026#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # Raspberry sudo apt update -y \u0026amp;\u0026amp; sudo apt install libffi-dev libssl-dev python3 python3-pip -y sudo pip install docker-compose vps上安装1 sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin # 或者 sudo curl -fsSL https://get.docker.com | bash -s docker sudo apt-get install docker-compose-plugin docker compose version sudo docker run hello-world 修改dockerhub源 参考 Strike Freedom sudo docker info | grep \u0026#34;Docker Root Dir\u0026#34; # no swap limit support sudo chmod +w /etc/default/grub sudo vim /etc/default/grub ## GRUB_CMDLINE_LINUX配置项后面添加 GRUB_CMDLINE_LINUX=\u0026#34; cgroup_enable=memory swapaccount=1\u0026#34; sudo chmod -w /etc/default/grub sudo update-grub reboot sudo mkdir -p /home/dockerlib \u0026#34;data-root\u0026#34;: \u0026#34;/home/dockerlib/\u0026#34;, \u0026#34;data-root\u0026#34;: \u0026#34;/home/share/bkp/lxc_dockers/docker/\u0026#34;, # \u0026gt;=17.5 sudo tee /etc/docker/daemon.json \u0026lt;\u0026lt;-\u0026#39;EOF\u0026#39; { \u0026#34;registry-mirrors\u0026#34;: [\u0026#34;https://xxx.mirror.aliyuncs.com\u0026#34;], \u0026#34;data-root\u0026#34;: \u0026#34;/home/dockerlib/\u0026#34;, \u0026#34;log-driver\u0026#34;:\u0026#34;json-file\u0026#34;, \u0026#34;log-opts\u0026#34;:{ \u0026#34;max-size\u0026#34; :\u0026#34;5m\u0026#34;, \u0026#34;max-file\u0026#34;:\u0026#34;1\u0026#34; } } EOF sudo systemctl daemon-reload \u0026amp;\u0026amp; sudo systemctl restart docker 添加用户组 sudo cat /etc/group | grep docker # 最后的冒号后面没有用户 sudo gpasswd -a ${USER} docker sudo systemctl restart docker 问题排查 socket权限不足 sudo chmod a+rw /var/run/docker.sock sudo systemctl restart docker 卸载 docker stop $(docker ps -aq) \u0026amp;\u0026amp; docker system prune -a rm /usr/local/bin/docker-compose dpkg -l | grep -i docker apt-get purge -y docker-engine docker docker.io docker-ce docker-ce-cli docker-ce-rootless-extras docker-scan-plugin \u0026amp;\u0026amp; apt-get autoremove -y --purge docker-engine docker docker.io docker-ce docker-ce-cli docker-ce-rootless-extras docker-scan-plugin apt autoremove \u0026amp;\u0026amp; apt autoclean rm -rf /var/lib/docker /etc/docker /etc/apparmor.d/docker /var/run/docker.sock \u0026amp;\u0026amp; groupdel docker 虚拟机 虚拟机安装 openwrt, 参照[最佳实践-树莓派] 参考 (Install Docker Engine on Debian | Docker Documentation)[https://docs.docker.com/engine/install/debian/]\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/best_config_linux/","summary":"虚拟机集群 常规配置 换源 vps 可不用换源\n# 更换源 cp -a /etc/apt/sources.list /etc/apt/sources.list.bak ## 如果失效，则使用下方的 sed -i \u0026#34;s@http://ftp.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g\u0026#34; /etc/apt/sources.list sed -i \u0026#34;s@http://security.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g\u0026#34; /etc/apt/sources.list # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # deb-src https://mirrors.","title":"最佳实践-Linux环境配置"},{"content":"局域网网络拓扑 光猫路由模式，局限性比较强 光猫桥联，关闭 dhcp、wifi 单口,性能强大的服务器可以添加 usb 千兆网卡成为主软路由，或者借助其他交换设备成为单臂路由 多口、双口\u0026ndash;\u0026gt;主软路由 光猫操作 网上搜寻相关账号信息，有很多 分别按照不同运营商，按照操作开启ipv6、桥连即可 主路由 建议为硬件比较好的路由器，nat能力比较强，我这边使用的是小米3600 进行网络拨号、dhcp分配， ipv6选择native即可 旁路由 可用nas、raspberry等安装openwrt即可 设置成旁路由模式，负责一些流量转发、kms及签到等的工作 ","permalink":"https://suai.tk/posts/building_localhost/","summary":"局域网网络拓扑 光猫路由模式，局限性比较强 光猫桥联，关闭 dhcp、wifi 单口,性能强大的服务器可以添加 usb 千兆网卡成为主软路由，或者借助其他交换设备成为单臂路由 多口、双口\u0026ndash;\u0026gt;主软路由 光猫操作 网上搜寻相关账号信息，有很多 分别按照不同运营商，按照操作开启ipv6、桥连即可 主路由 建议为硬件比较好的路由器，nat能力比较强，我这边使用的是小米3600 进行网络拨号、dhcp分配， ipv6选择native即可 旁路由 可用nas、raspberry等安装openwrt即可 设置成旁路由模式，负责一些流量转发、kms及签到等的工作 ","title":"局域网建设"},{"content":"摘要 已经很久不用U盘了，有一次突发的需求，需要将一个没有硬盘的主机变成服务器使用 搜寻了很久，找到了slax 将淘宝上随便买的一个所谓合作的天猫盘，装上系统, 随着调试，重启了几次，然后U盘就挂了。插入电脑，无法识别，内存损坏 量产 使用 ChipGenius 进行检测\n设备描述: [I:]USB 大容量存储设备(NAND USB2DISK) 设备类型: 大容量存储设备 协议版本: USB 2.00 当前速度: 高速(HighSpeed) 电力消耗: 100mA USB设备ID: VID = FFFF PID = 1201 设备修订版: 0000 产品制造商: NAND 产品型号: USB2DISK 产品修订版: 0.00 主控厂商: FirstChip(一芯) 主控型号: FC1178BC 闪存识别码: 453C98B37672 - SanDisk(闪迪) - 1CE/单通道 [TLC] -\u0026gt; 总容量 = 32GB 在线资料: http://dl.mydigit.net/search/?type=all\u0026amp;q=FC1178BC 使用对应的量产工具，操作即可\n启动盘 ventoy Ventoy\nOfficial Kali Linux Downloads\n持久化，u 盘新建ventoy文件夹，创建ventoy.json文件\n{ \u0026#34;control\u0026#34;: [ { \u0026#34;VTOY_DEFAULT_SEARCH_ROOT\u0026#34;: \u0026#34;/iso\u0026#34; }, { \u0026#34;VTOY_MENU_TIMEOUT\u0026#34;: \u0026#34;5\u0026#34; }, { \u0026#34;VTOY_DEFAULT_IMAGE\u0026#34;: \u0026#34;/iso/kali-linux-2020.4-live-amd64.iso\u0026#34; } ], \u0026#34;persistence\u0026#34;: [ { \u0026#34;image\u0026#34;: \u0026#34;/iso/kali-linux-2020.4-live-amd64.iso\u0026#34;, \u0026#34;backend\u0026#34;: \u0026#34;/data/persistence_ext4_2GB_casper-rw.dat\u0026#34;, \u0026#34;autosel\u0026#34;: 1 } ] } # 进行系统的配置多用户 sudo systemctl set-default multi-user.target ","permalink":"https://suai.tk/posts/upan_abouts/","summary":"摘要 已经很久不用U盘了，有一次突发的需求，需要将一个没有硬盘的主机变成服务器使用 搜寻了很久，找到了slax 将淘宝上随便买的一个所谓合作的天猫盘，装上系统, 随着调试，重启了几次，然后U盘就挂了。插入电脑，无法识别，内存损坏 量产 使用 ChipGenius 进行检测\n设备描述: [I:]USB 大容量存储设备(NAND USB2DISK) 设备类型: 大容量存储设备 协议版本: USB 2.00 当前速度: 高速(HighSpeed) 电力消耗: 100mA USB设备ID: VID = FFFF PID = 1201 设备修订版: 0000 产品制造商: NAND 产品型号: USB2DISK 产品修订版: 0.00 主控厂商: FirstChip(一芯) 主控型号: FC1178BC 闪存识别码: 453C98B37672 - SanDisk(闪迪) - 1CE/单通道 [TLC] -\u0026gt; 总容量 = 32GB 在线资料: http://dl.mydigit.net/search/?type=all\u0026amp;q=FC1178BC 使用对应的量产工具，操作即可\n启动盘 ventoy Ventoy\nOfficial Kali Linux Downloads\n持久化，u 盘新建ventoy文件夹，创建ventoy.json文件\n{ \u0026#34;control\u0026#34;: [ { \u0026#34;VTOY_DEFAULT_SEARCH_ROOT\u0026#34;: \u0026#34;/iso\u0026#34; }, { \u0026#34;VTOY_MENU_TIMEOUT\u0026#34;: \u0026#34;5\u0026#34; }, { \u0026#34;VTOY_DEFAULT_IMAGE\u0026#34;: \u0026#34;/iso/kali-linux-2020.","title":"U盘相关"},{"content":"摘要 日前购买了一台惠普打印机，用家庭版windows打印日常资料都好好的，一切正常。 后来电脑重装了专业版，打印出现了问题，特搜索进行解决，并汇总：\n问题汇总 只能打印图片，无法打印文档 解决思路：对temp/tmp等文件进行权限编辑1。 操作： win+e\u0026ndash;\u0026gt;属性\u0026ndash;\u0026gt;高级系统设置\u0026ndash;\u0026gt;高级\u0026ndash;\u0026gt;环境变量 找到用户和系统的tmp/temp文件夹 对tmp/temp进行权限编辑，文件夹属性\u0026ndash;\u0026gt;安全\u0026ndash;编辑\u0026ndash;\u0026gt;勾选完全控制 无法自动清空打印队列 解决思路：更换端口2 操作： 设置\u0026ndash;\u0026gt;设备\u0026ndash;\u0026gt;打印机和扫描仪 找到打印机\u0026ndash;\u0026gt;管理\u0026ndash;\u0026gt;打印机属性 端口，一般情况下应该是wsd。需要更换为tcp/ip 添加端口\u0026ndash;\u0026gt;tcp/ip端口\u0026ndash;\u0026gt;打印机地址\u0026ndash;\u0026gt;自动适配更换成功 删除打印队列 问题描述：经过上面配置，但是打印队列依然存在以前打印成功的文档，无法自动清空3 操作： 停止打印功能 在Windows10-\u0026gt;开始-\u0026gt;运行，或者直接“windous+R”； 输入“services.msc” 按首字母找到“Print Spooler”, 右键停止； 清空缓存 进入路径“ C:\\Windows\\System32\\Spool\\Printers ” 全部删除缓存文件 重启打印功能 按首字母找到“Print Spooler”, 右键启动； 刷新打印机队列 参考文章 Windows 10下打印机不能打印Office文件解决办法_ITLionWoo的专栏-CSDN博客_右键临时目录并打印属性页\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n惠普M706n打印机没法自动删除队列。 - 惠普支持社区 - 901949\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n【打印】打印队列无法删除怎么办 如何清理Win10打印队列_小白兔de窝-CSDN博客_删不掉打印队列中的文件\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/questions_about_hp_printer/","summary":"摘要 日前购买了一台惠普打印机，用家庭版windows打印日常资料都好好的，一切正常。 后来电脑重装了专业版，打印出现了问题，特搜索进行解决，并汇总：\n问题汇总 只能打印图片，无法打印文档 解决思路：对temp/tmp等文件进行权限编辑1。 操作： win+e\u0026ndash;\u0026gt;属性\u0026ndash;\u0026gt;高级系统设置\u0026ndash;\u0026gt;高级\u0026ndash;\u0026gt;环境变量 找到用户和系统的tmp/temp文件夹 对tmp/temp进行权限编辑，文件夹属性\u0026ndash;\u0026gt;安全\u0026ndash;编辑\u0026ndash;\u0026gt;勾选完全控制 无法自动清空打印队列 解决思路：更换端口2 操作： 设置\u0026ndash;\u0026gt;设备\u0026ndash;\u0026gt;打印机和扫描仪 找到打印机\u0026ndash;\u0026gt;管理\u0026ndash;\u0026gt;打印机属性 端口，一般情况下应该是wsd。需要更换为tcp/ip 添加端口\u0026ndash;\u0026gt;tcp/ip端口\u0026ndash;\u0026gt;打印机地址\u0026ndash;\u0026gt;自动适配更换成功 删除打印队列 问题描述：经过上面配置，但是打印队列依然存在以前打印成功的文档，无法自动清空3 操作： 停止打印功能 在Windows10-\u0026gt;开始-\u0026gt;运行，或者直接“windous+R”； 输入“services.msc” 按首字母找到“Print Spooler”, 右键停止； 清空缓存 进入路径“ C:\\Windows\\System32\\Spool\\Printers ” 全部删除缓存文件 重启打印功能 按首字母找到“Print Spooler”, 右键启动； 刷新打印机队列 参考文章 Windows 10下打印机不能打印Office文件解决办法_ITLionWoo的专栏-CSDN博客_右键临时目录并打印属性页\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n惠普M706n打印机没法自动删除队列。 - 惠普支持社区 - 901949\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n【打印】打印队列无法删除怎么办 如何清理Win10打印队列_小白兔de窝-CSDN博客_删不掉打印队列中的文件\u0026#160;\u0026#x21a9;\u0026#xfe0e;","title":"惠普打印机问题解决"},{"content":"vps 前期准备 安装基本的软件、更新和配置，详见建站探索 修改 python 默认的版本，详见建站探索 修改为密钥连接，详见使用密钥连接 VPS 安装和卸载宝塔面板 安装面板，如果后续出现问题需要卸载，可以使用卸载的命令(2 选项不会清空网站和数据空，需要卸载面板前操作删除) # install wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh \u0026amp;\u0026amp; bash install.sh -y # uninstall wget http://download.bt.cn/install/bt-uninstall.sh \u0026amp;\u0026amp; sh bt-uninstall.sh 安装必要的运行环境 lnmp 网站安装 定期备份支持 进行网站正向或反向代理 ","permalink":"https://suai.tk/posts/built_site_with_bt/","summary":"\u003ch2 id=\"vps-前期准备\"\u003evps 前期准备\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e安装基本的软件、更新和配置，详见\u003ca href=\"\"\u003e建站探索\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e修改 python 默认的版本，详见\u003ca href=\"\"\u003e建站探索\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e修改为密钥连接，详见\u003ca href=\"\"\u003e使用密钥连接 VPS\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"使用宝塔搭建网站"},{"content":"最近 github 广东访问特别慢，新加坡的节点经常无响应，猜测应该是 DNS 污染导致，故而修改如下：\n在网站进行 github 相关查询 github.com assets-cdn.github.com github.global.ssl.fastly.net 修改 Hosts # C:\\Windows\\System32\\drivers\\etc\\ 192.30.253.112 github.com 192.30.253.113 github.com 151.101.184.133 assets-cdn.github.com 151.101.185.194 github.global.ssl.fastly.net 刷新 DNS 缓存 ipconfig /flushdns 参考文章 国内加速 GitHub 访问方法 ","permalink":"https://suai.tk/posts/solve_dns_about_github/","summary":"\u003cp\u003e最近 github 广东访问特别慢，新加坡的节点经常无响应，猜测应该是 DNS 污染导致，故而修改如下：\u003c/p\u003e","title":"解决Github DNS污染"},{"content":"为了在已有 VPS 的基础上进行进一步的优化，有必要进行加速软件的安装。\nlinux新版本默认已有bbr，不需要安装算法 检测是否开启，参考开启 TCP BBR 拥塞控制算法 · iMeiji/shadowsocks_install Wiki\n以下做法作废@2022-03-13\n两种安装方法 一键安装脚本和手动安装的，推荐一件安装脚本。\n一键脚本 先安装内核，然后安装加速脚本\nwget -N --no-check-certificate \u0026#34;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\u0026#34; \u0026amp;\u0026amp; chmod +x tcp.sh \u0026amp;\u0026amp; ./tcp.sh 手动安装 注意事项 安装锐速需要降级系统内核，而安装 Google BBR 则需要升级系统内核，故两者不能同时安装。\n安装锐速需要降级系统内核，有可能造成系统不稳定，故不建议将其应用在重要的生产环境中。\n本教程只适用于 CentOS6 x64 和 CentOS7 x64 系统！\n判断系统类型 uname -r 回车后，会输出当前系统的内核版本。主要分三种情况：\n结果以 2 开头，例如 2.6.32-696.18.7.el6.x86_64。 这种输出结果说明我们的服务器为 CentOS6 x64 系统，大家直接查看第三步进行锐速安装即可。\n结果以 3 开头，例如 3.10.0-693.11.6.el7.x86_64。 这种输出结果说明我们的服务器为 CentOS7 x64 系统，大家直接查看第四步进行锐速安装即可。\n结果以 4 开头，例如 4.12.10-1.el7.elrepo.x86_64。 这种输出结果说明我们的服务器已经安装 Google BBR 拥塞控制算法，此时已经无法继续安装锐速。\nCentOS6 x64 系统安装锐速 如果在第二步中确定的服务器系统为 CentOS6 x64，那么请看这一步。\nwget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh \u0026amp;\u0026amp; bash appex.sh install \u0026#39;2.6.32-642.el6.x86_64\u0026#39; 一路回车即可\nCentOS7 x64 系统安装锐速 如果在第二步中确定的服务器系统为 CentOS7 x64，那么请看这一步。 因为 CentOS7 X64 系统的内核版本太高，所以没办法直接安装锐速，我们需要对系统内核进行降级操作。\nwget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh \u0026amp;\u0026amp; bash rskernel.sh 统会自动下载内核更换脚本并执行。按照下图提示，我们可以看到当前系统为 CentOS7 X64，同时脚本正在更换内核。\n内核更换完成后，会进行重启操作，这样才能成功更换内核\n服务器重启后， Xshell 的连接会断开\n服务器重启大概会耗时 2~3 分钟，我们耐心等待即可。\n重连以后输入一下命令：\nyum install net-tools -y \u0026amp;\u0026amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh \u0026amp;\u0026amp; bash appex.sh install 回车即可\n锐速管理命令 本文中的锐速一键脚本提供了非常丰富的管理命令，大家可以按照下列命令进行锐速的管理。\n/appex/bin/serverSpeeder.sh status|start|stop|restart|uninstall 测速脚本 LemonBench.sh\nLemonBench工具(别名LBench、柠檬Bench)，是一款针对Linux服务器设计的服务器性能测试工具。通过综合测试，可以快速评估服务器的综合性能，为使用者提供服务器硬件配置信息。\n特点:\n服务器基础信息(CPU信息/内存信息/Swap信息/磁盘空间信息等) Speedtest网速测试 (本地到最近源及国内各地域不同线路的网速) 磁盘测试(4K块/1M块 直接写入测试) 路由追踪测试(追踪到国内和海外不同线路的路由信息) Spoofer测试(获取详细网络信息，快速判断服务器接入线路) 使用： curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast\n参考文章 CentOS6/7 专用破解版锐速一键安装脚本 - Vultr 中文网 ","permalink":"https://suai.tk/posts/speeder_vps/","summary":"\u003cp\u003e为了在已有 VPS 的基础上进行进一步的优化，有必要进行加速软件的安装。\u003c/p\u003e","title":"加速算法_VPS"},{"content":"众所周知，宝塔面板是通过 ip:port/safeport 来进行访问的，这样会产生几个问题：\nip 地址的操作，包括输入和记忆，均比较麻烦。更不用说，拥有多个 ip 的。 ip 有可能会被 Q 掉，这样基本很难通过简单的方法进行连接了。 ip 访问可能延迟较大，不稳定 ip 是 http 的，存在安全的问题 面板访问路径可能会被爆破。如何尽可能实现数据的分流，隐藏面板的访问路径 针对以上问题，我搜寻了所有的 google、baidu 查询，没有找到能够完美解决的办法，于是参考 11进行了改进。\n约定 主站域名：xxx.site, bt 面板域名：yyy.xxx.site(静态网站), safeport 为创建面板时分配的安全入口。\n进行设置 创建面板域名静态网站 在 CloudFlare 添加解析，并设置主站重定向 解析主站。 然后添加面板域名的解析，并设置为灰色，即只启用 DNS。\n修改SSL/TLS--\u0026gt;Edge Certificate--\u0026gt;Always use HTTPS为OFF。\n添加Page Rules, 将 http://xxx.site/* 301 重定向到 https://xxx.site/$1。\n修改面板端口和域名 建议端口为 http, 参考2\nHTTP ports supported by Cloudflare: 80;8080;8880;2052;2082;2086;2095 HTTPS ports supported by Cloudflare: 443;2053;2083;2087;2096;8443 比如 8880，此时会强制要求重新登录，使用yyy.xxx.site:port/safeport进行登录。\n面板域名网站添加反代，并开启 CDN http://127.0.0.1:8880\n使用xxx.site/safeport进行登录。\n设置默认站点 在宝塔设置主站为默认站点。\n此时返回面板，默认端口变成了 80, 尝试修改为 8880, 提示被占用。\n之后登录所有未设置过的子域名均会被重定向到主站。防止被恶意解析。\nFAQ 其他详细的可参考宝塔文档3。\nQ1: 移除面板的域名访问限制\nA1: ssh 登录，使用bt中的12进行移除域名绑定限制\nQ2: 如何移除面板的 SSL\nA2:\nrm -f /www/server/panel/data/ssl.pl \u0026amp;\u0026amp; /etc/init.d/bt restart 隐藏 IP 方法之给宝塔面板绑定域名套上 cloudflare 使用 cdn 访问\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIdentifying network ports compatible with Cloudflare\u0026rsquo;s proxy – Cloudflare Support\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n序言 · 宝塔面板手册 · 看云\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/btpanel_domain_proxy_with_cf/","summary":"\u003cp\u003e众所周知，宝塔面板是通过 \u003ccode\u003eip:port/safeport\u003c/code\u003e 来进行访问的，这样会产生几个问题：\u003c/p\u003e","title":"宝塔面板域名使用CloudFlare进行隐藏"},{"content":"通过密钥来连接 vps，可以增强按照安全性，避免许多爆破尝试，比如以下的\nConnecting to xxx.xx.xx.xxx:xx Connection established. To escape to local shell, press \u0026#39;Ctrl+Alt+]\u0026#39;. Last failed login: Sat Feb 8 22:40:37 CST 2020 from xx.xx.xx.xxx on ssh:notty There were 891 failed login attempts since the last successful login. Last login: Sat Feb 8 17:31:17 2020 from xx.xx.xx.xxx 生成密钥对 NAME_IDRSA=\u0026#34;xxx@xxx.nas\u0026#34; FILE_IDRSA=\u0026#34;$HOME/.ssh/xxx_rsa\u0026#34; ssh-keygen -t rsa -C ${NAME_IDRSA} -f ${FILE_IDRSA} 编辑config # vim /root/.ssh/config Host github.com HostName github.com PreferredAuthentications publickey IdentityFile /root/.ssh/github_rsa Host gitea HostName xxx.xx Port yyyy User git IdentityFile C:/Users/xx/.ssh/xxx.xx_rsa 上传到 VPS PORT=xxx IP_ADDR=\u0026#34;root@192.168.31.xxx\u0026#34; ssh-copy-id -i ${FILE_IDRSA} -p ${PORT} ${IP_ADDR} # 提示已经有 /usr/bin/ssh-copy-id: ERROR: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ERROR: @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ ERROR: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ERROR: IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! ERROR: Someone could be eavesdropping on you right now (man-in-the-middle attack)! ERROR: It is also possible that a host key has just been changed. ERROR: The fingerprint for the ED25519 key sent by the remote host is ERROR: SHA256:ktX7AbbKjbJzSmEhTdapKAn9wSMJ1wFPn1rxBqj6dzg. ERROR: Please contact your system administrator. ERROR: Host key verification failed. ssh-keygen -R [xx.xx.xx.xx]:port 中间需要输入密码，然后就会在~生成.ssh/authorized_keys, 并自动帮助设置好文件夹权限和 pubkey 的权限1\n编辑 sshd 配置并且重启 sshd vim /etc/ssh/sshd_config # 编辑以下行，取消掉前面的`#` PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys # 禁用密码登录 PasswordAuthentication no systemctl sshd restart 重新连接 先不要关闭该 ssh 连接的界面！！！\n先不要关闭该 ssh 连接的界面！！！\n先不要关闭该 ssh 连接的界面！！！\n另开一个新的标签页，尝试连接，找到私钥位置，然后导入本地的 ssh 终端。\n使用 key 来连接，如果成功了，说明安装操作均没有问题。 否则，需要再次进行检查，哪一步出了问题。\n系统重装 重装前，编辑sshd_config, PasswordAuthentication修改为yes 重装系统，然后使用root密码登录 本地客户端，ssh-keygen -R hostname, hostname即ip地址，解除配对2 重新上传密钥，然后测试登录 DD wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/InstallNET.sh \u0026amp;\u0026amp; chmod +x InstallNET.sh \u0026amp;\u0026amp; ./InstallNET.sh -d 10 -v 64 -p \u0026#34;自定义root密码\u0026#34; -port \u0026#34;自定义ssh端口\u0026#34; wget -N --no-check-certificate -q -O install.sh \u0026#34;https://raw.githubusercontent.com/wulabing/Xray_onekey/nginx_forward/install.sh\u0026#34; \u0026amp;\u0026amp; chmod +x install.sh \u0026amp;\u0026amp; bash install.sh cloudflare优选ip # add cname 解析 # worker addEventListener( \u0026#34;fetch\u0026#34;, event =\u0026gt; { let url = new URL(event.request.url); url.hostname = \u0026#34;cname.domain.name\u0026#34;; let request = new Request(url,event.request); event.respondWith( fetch(request) ) } ) 监控 参考哪吒面板，一个便携服务器状态监控面板搭建教程，不想拥有一个自己的探针吗？ - 好鸭 歌单转移 迁移 网易云 / QQ 音乐到 Apple Music, Youtube Music, Spotify | yyrcd 参考链接 .ssh directory does not exist debian\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nHow to establish ssh key pair when \u0026ldquo;Host key verification failed\u0026rdquo; - Stack Overflow\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/connect_vps_with_key/","summary":"\u003cp\u003e通过密钥来连接 vps，可以增强按照安全性，避免许多爆破尝试，比如以下的\u003c/p\u003e","title":"通过密钥连接VPS"},{"content":"查询优化 小表在前，大表在后 对子查询优化后再联结 尽量不用 cross join 重难点 执行顺序：ON and WHERE 执行的时候先根据联结的条件进行 inner 查询，然后追加上 left 或者 right ON 比 WHERE 早执行, 一些需要扩展的信息放在 on 里面 两表执行 on 联结以后，如果需要使用 where，需要特别..注意：不要再将保留表筛选掉.. where 在 group by 前面筛选， having 在后面 instr 和 group_concat 可以对数据进行归并处理(参考 impala1) 窗口函数可以有效降低语句复杂度，更简洁、美观 sum/count/min/max row_number/rank/dense_rank first_value/last_value Impala 文档\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/sql3m_002/","summary":"\u003ch2 id=\"查询优化\"\u003e查询优化\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e小表在前，大表在后\u003c/li\u003e\n\u003cli\u003e对子查询优化后再联结\u003c/li\u003e\n\u003cli\u003e尽量不用 cross join\u003c/li\u003e\n\u003c/ol\u003e","title":"每日SQL三分钟_002"},{"content":"创建环境 主要参考官网文档1和 RssHub2文档\n# docker network create freshrss-network version: \u0026#39;3\u0026#39; services: freshrss: image: freshrss/freshrss container_name: freshrss restart: always environment: CRON_MIN: \u0026#39;14,43\u0026#39; TZ: Asia/Shanghai volumes: - /root/freshrss/data:/var/www/FreshRSS/data - /root/freshrss/extensions:/var/www/FreshRSS/extensions ports: - \u0026#39;30305:80\u0026#39; - \u0026#39;30306:443\u0026#39; logging: driver: json-file options: max-size: 2m networks: default: external: name: freshrss-network version: \u0026#39;3\u0026#39; services: rsshub: image: diygod/rsshub restart: always ports: - \u0026#39;30309:1200\u0026#39; environment: NODE_ENV: production CACHE_TYPE: redis REDIS_URL: \u0026#39;redis://redis:6379/\u0026#39; PUPPETEER_WS_ENDPOINT: \u0026#39;ws://browserless:3000\u0026#39; depends_on: - redis - browserless browserless: # See issue 6680 image: browserless/chrome:1.43-chrome-stable restart: always redis: image: redis:alpine restart: always volumes: - ./redis-data:/data volumes: redis-data: Get Docker Engine\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nRSSHub\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/rsshub_build/","summary":"\u003ch2 id=\"创建环境\"\u003e创建环境\u003c/h2\u003e\n\u003cp\u003e主要参考官网文档\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e和 RssHub\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e文档\u003c/p\u003e","title":"RssHub Test"},{"content":"在主机(VPS)搭建网站 默认按照 Debian 进行, 默认为 root 权限，如果其他用户，在前面添加sudo\n建站前配置 Q1: ssh 连接提示：\nConnecting to xx.xx.xx.xx:xx... Connection established. To escape to local shell, press \u0026#39;Ctrl+Alt+]\u0026#39;. Connection closing...Socket close. Connection closed by foreign host. Disconnected from remote host(pr) at 11:38:50. A1: 可能是 SSH 服务器没设置保活时间间隔1，设置属性解释2\necho \u0026#34; ClientAliveInterval 60 ClientAliveCountMax 3 \u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config \u0026amp;\u0026amp; systemctl restart sshd 如果需要安装宝塔，需要在此处开始!!!\n如果需要安装宝塔，需要在此处开始!!!\n如果需要安装宝塔，需要在此处开始!!!\n参考宝塔 Linux 面板安装教程\nQ2: 进行系统的更新升级及必要程序的安装（vim/curl/wget/screen), 对 vim 设置行号、大小写查询转换、tab 宽度等3\nA2: 执行以下的脚本\napt-get update -y \u0026amp;\u0026amp; apt-get upgrade -y \u0026amp;\u0026amp; apt-get install -y vim wget screen curl \u0026amp;\u0026amp; echo \u0026#34;syntax on set smartcase set number set shiftwidth=4 set tabstop=4 set expandtab \u0026#34; \u0026gt;\u0026gt; /etc/vim/vimrc \u0026amp;\u0026amp; tail /etc/vim/vimrc Q3: 修改 python 的默认软链接\nA3:\nln -sf /usr/bin/python3 /usr/bin/python \u0026amp;\u0026amp; python --version # apt-get install python3-pip \u0026amp;\u0026amp; pip3 --version Q4: install v2ray\nA4: 233script，这个可以后面另开叙述，此处仅供备用\nbash \u0026lt;(curl -s -L https://git.io/v2ray.sh) 搭建网站 选择 LNMP 或者 Caddy 均可，500M 以上内存建议 LNMP， 仅供参考\nLNMP 参考lnmp.org的安装教程，在此只提供必要的说明。 在lnmp.org.auto按照自己 vps 的情况，内存分配器可以选jemalloc，生成一键脚本, 进行安装\n创建虚拟机，并添加泛域名解析。 lnmp vhost add # xxx.site # *.xxx.site #删除虚拟机， # lnmp vhost del # chattr -i /home/wwwroot/msuai.top/.user.ini # rm -rf /home/wwwroot/msuai.top cf 进行泛域名解析 cloudflare 进行域名的绑定和解析，然后 ssl 里面先选程 flexible 模式，获得 CF_key, CF_pem\nexport CF_Key=\u0026#34;xxxxxx\u0026#34; export CF_Email=\u0026#34;xxxxxx\u0026#34; lnmp dnsssl cf 此处使用 globe key, 可以安装成功。 如果要将 flexible 改成 full 或者 full(strict)，需要更多的配置，暂时没有测试完毕，可参考文档4\n修改 nginx.conf 里面的配置，添加一下include内容， 并测试重启 nginx 服务5, 访问域名，不再显示nginx welcome 但也不是 ip 探针、phpmyadmin 等内容 include vhost/*.conf # 测试nginx， 并重启 nginx -t /etc/init.d/nginx reload 配置多站点, 安装虚拟机，进行解析和网站目录的设置 Caddy+php 参考小内存 VPS 安装 Caddy+PHP 7+Sqlite 3 环境，并快速搭建 Typecho 博客，可以成功安装\n只能先使用 flexible 模式。 如果使用了 cloudflare 的严格模式，一直出现 521 错误，即使加了插件和 tls，也出错，目前没有找到更好的解决办法，需要后续再来解决4\napt-get install php7.0-cgi php7.0-fpm php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite3 sqlite3 -y # install caddy with doubi wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh install # tls.dns.cloudflare # 编辑Caddyfile echo \u0026#34;http://xxx.site { redir https://www.xxx.site{url} } https://www.xxx.site { gzip root /yoursite_pwd # tls { # dns cloudflare # } fastcgi / /run/php/php7.0-fpm.sock php rewrite { if {path} not_match ^\\/admin to {path} {path}/ /index.php?{query} } }\u0026#34; \u0026gt; /usr/local/caddy/Caddyfile # 重启caddy /etc/init.d/caddy restart 安装 webserver 默认网站目录为 $YWS, 执行完 shell 脚本，打开域名即可安装\n安装文件\n安装 WordPress, 比如 $YWS = wp.xxx.site # 如果需要重装，只需要删除里面的`wp-config.php`即可[，相关的数据库进行清理] cd $YWS wget https://cn.wordpress.org/latest-zh_CN.tar.gz \u0026amp;\u0026amp; tar zxvf latest* \u0026amp;\u0026amp; mv ./wordpress/* ./ \u0026amp;\u0026amp; rm -rf latest* wordpress/ \u0026amp;\u0026amp; chmod -R 755 ./ \u0026amp;\u0026amp; chown www:www -R ./* 安装 Typecho, 比如 $YWS = tp.xxx.site cd $YWS #以下为最新稳定版 wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gz \u0026amp;\u0026amp; tar zxvf 1.1* \u0026amp;\u0026amp; mv ./build/* ./ \u0026amp;\u0026amp; rm -rf 1.1* buil* \u0026amp;\u0026amp; chmod -R 755 ./* \u0026amp;\u0026amp; chown www:www -R ./* 安装 Zblog, 比如 $YWS = zg.xxx.site cd $YWS wget https://update.zblogcn.com/zblogphp/install.tar.gz \u0026amp;\u0026amp; tar -xf ./install.tar.gz \u0026amp;\u0026amp; rm -rf ./install.tar.gz \u0026amp;\u0026amp; chmod -R 755 ./* \u0026amp;\u0026amp; chown www:www -R ./* FAQ\nQ1: 在设置中开启了站点的https，出现重定向循环\nA1: 修改 wordpress 根目录($YWS)的 wp-config.php，在 \u0026lt;?php 后其添加如下代码\n$_SERVER[\u0026#39;HTTPS\u0026#39;] = \u0026#39;on\u0026#39;; define(\u0026#39;FORCE_SSL_LOGIN\u0026#39;, true); define(\u0026#39;FORCE_SSL_ADMIN\u0026#39;, true); Q2: 找到适配 typecho\u0026amp;wordpress 的主题\nA2：\ntypecho 主题参考\nPureLove 小清新风格 - Typecho 主题模板站\nBigfa 简约但精致的主题 - Typecho 主题模板站\nArmxMod for Typecho - Typecho 个性化响应式自适应主题\nAL_lolimeow 主题 for Typecho 版-盒子萌\nAurora\nwordpress 主题参考\nSakura\nSakura2，该主题不可用\nH-Siren\nLolimeow\nRabbit3.0\n使用 Github 和 Netlify 搭建静态网页 分别使用仓库对 githubpages 和 Netlify 搭建，域名使用 Cloudflare进行设置解析，遇到以下问题：\nq1: 网页没有格式，css 无法进行网页的生成。F12 查看网页 css 代码发现： Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://xxxxx.ga/css/xx.css\u0026#39; \u0026amp;\u0026amp; with computed SHA-256 integrity \u0026#39;Df4VYwE3+jo4Q=\u0026#39;. The resource has been blocked. a1: 解决方法： 关闭 Cloudflare 的 css/js/html 数据压缩\nq2: Netlify中使用 hugo 进行静态网页制作，其中对 theme 进行git submodule add订阅，异地进行数据更新维护时，发现本地无法进行预览，缺少模板文件（template、html 等等，提示需要进行模板文件的创建）\na2: 本地的 clone 的主题文件夹为空，需要清理后，重新订阅主题，才能正确进行预览\nDocker 安装网站 # install docker # 参考 \u0026lt;https://zhuanlan.zhihu.com/p/93839317\u0026gt; apt-get remove docker docker-engine docker.io curl -fsSL get.docker.com -o get-docker.sh \u0026amp;\u0026amp; sh get-docker.sh pip install docker-compose mkdir /root/typecho cd /root/typecho docker run -d \\ --name=typecho \\ --restart always \\ --mount type=tmpfs,destination=/tmp \\ -v /root/typecho/data:/data \\ -e PHP_TZ=Asia/Shanghai \\ -e PHP_MAX_EXECUTION_TIME=600 \\ -p 40080:80 \\ 80x86/typecho:latest 插件推荐 Typecho 主要进行主题和插件的收藏，备用\n主题 Inital 主题，参考分享 下的文章 - OFFODD Joe主题, HaoOuBa/Joe: A Theme of Typecho 插件 缓存插件，缓存插件 TpCache for Typecho - 老高的技术博客 Sitemap, Typecho 站点地图快速生成插件 Sitemap - TYPECHO WIKI 申请证书 参考(说明 · acmesh-official/acme.sh Wiki · GitHub)[https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E] export CF_Token=\u0026#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u0026#34; export CF_Account_ID=\u0026#34;yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\u0026#34; ./acme.sh --issue --dns dns_cf -d xxx.top -d \u0026#39;*.xxx.top\u0026#39; ./acme.sh --install-cert -d xxx.top \\ --key-file /root/src/nginx/xxx.top.key \\ --fullchain-file /root/src/nginx/xxx.top.crt \\ --ca-file /root/src/nginx/xxx.top/xxx.top.ca.crt \\ --reloadcmd \u0026#34;service nginx force-reload\u0026#34; 未完待续 解决 SSH Connection closed by foreign host 问题\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nWhat options `ServerAliveInterval` and `ClientAliveInterval` in sshd_config exactly do?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nREDEFINE-TAB-AS-4-SPACES\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCloudFlare 证书配置\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nNGINX-ONLY-SHOWS-WELCOME-PAGE\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/bulit_site_hist/","summary":"\u003ch2 id=\"在主机vps搭建网站\"\u003e在主机(VPS)搭建网站\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e默认按照 Debian 进行, 默认为 root 权限，如果其他用户，在前面添加\u003ccode\u003esudo\u003c/code\u003e\u003c/strong\u003e\u003c/p\u003e","title":"建站历程"},{"content":"Windows安装及优化 选择w11专员工作站版本, 2021lstc 专业版 进行系统配置, 激活 企业版等不带商店支持的，添加商店支持，add store 其他优化配置 对除C盘外，属性--\u0026gt;安全--\u0026gt;高级, 修改所有权，并应用到子文件及容器。如果存在不同的BitLocker，需要设置自动解锁 缓存目录设置在比较大的盘：环境变量\u0026ndash;\u0026gt;TEMP/TMP, 用户和系统均需要修改 系统\u0026ndash;\u0026gt;存储\u0026ndash;\u0026gt;高级\u0026ndash;\u0026gt;新内容位置：迁移 如果提示失败，可能目的盘存在相似目录，重命名后再试 使用Onedrive进行同步 注销OneDrive，对个人文件夹下面onedrive目录重命名 登录，按照提示转移文件夹 将个人用户下面所有目录均属性--\u0026gt;移动到OneDrive目录下面 创建还原点 映射网络驱动器、添加打印机等 Windows软件 目的和原则 目的：做好软件的整理和归并，降低查找成本 原则：绿色\u0026gt;注册 按照重新配置新电脑的先后顺序进行排列 基本配置软件 进行office安装, office 安装 关于虚拟机 Hyper-V 与 VMware 是无法共存，装了 docker-desktop ，vmware 就不能用了 使用 vmware; 在 cmd 里运行bcdedit /set hypervisorlaunchtype off,重启电脑 使用 docker-desktop, 在 cmd 里运行bcdedit /set hypervisorlaunchtype auto,重启电脑 可选其他软件安装包 首选windows store，如果无，选snap，其次chocolatey snap可自定义bucket，比较方便，后续准备自定义一些比较方便的小工具 choco install miniconda3 vscode 如果 vscode 无法链接应用市场，在 settings 里面配置 proxy：http://127.0.0.1:10088,再试，如果还不行，删掉再试 火绒安全, 静默拦截各式弹窗, 系统占用低 win10自带系统输入法, [加入小鹤双拼]1。百度输入法, 干净输入法 飞扬时空(http://flyonzone.ys168.com/) Total Commander， 文件管理器，结合了各式的管理工具 Faststone Capture，截图编辑工具 win+v,Ditto， win7 下剪切板工具，省却反复粘贴操作 Listary，快捷搜索和软件操作，可搭配 Total Commander 使用 下载软件，搭配使用 aria2，替代迅雷下载神器 懒人配置包 Aria22，放到专用文件夹，设置成随浏览器开启而启动 Internet Download Manager3，最强下载工具1，多功能，可注册..或者.. PanDownload，部分需要从百度网盘下载，离线下载等软件 Quicker，实现一些软件启动等操作，搭配 Total Commander 和沙拉查词 使用 [天若 OCR]，图像识别 f.lux，桌面色温自动调整 spice远程管理 spice 客户端，virt-viewer-x64-10.0-1.0.msi spice-tools，spice-guest-tools-latest.exe kms 激活, 配合openwrt使用 slmgr /skms 192.168.31.2 slmgr /ato v2rayN，V2ray 的使用，服务器搭建和公司内网穿透等，方便异地办公 - 个人网盘4，做了 Office16、git、v2raycore、hugo 的整合(qzq 的移动宽带没得下载) 办公软件 [Office]4,这个不需要介绍了 Anaconda, 集成管理 python/nodejs/jupyternotebook 等 VScode，地表最强编辑器，吹爆 登录微软或者githu账号同步，可选：插件 Settings Sync，第一时间下载同步上传设置 VIM 输入法解决(https://github.com/VSCodeVim/Vim#input-method) Fira Code 字体 下载字体：https://github.com/tonsky/FiraCode/releases 安装：https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions Git4 配置环境变量 D:\\Program Files\\Git\\mingw64\\libexec\\ D:\\Program Files\\Git\\mingw64\\libexec\\git-core\\ D:\\Program Files\\Git\\bin\\ Hugo4, 静态网页生成框架 Xshell\u0026amp;XFtp, ssh/ftp 连接管理 Notepad++，快速预览并进行编辑转码等 Gifcam， 屏幕录制成 gif Quick Look, 快速进行文件的预览 坚果云，自动同步工具 远端控制 基本都是限制只能个人使用的\n推荐：Zerotier搭建局域网，通过远程桌面连接 Anydesk,直接进行下载安装，类似 Teamviewer 电源管理, 保证断电后自启 电脑待机，断电后自动还原系统的状态。进入 BIOS(DELETE/F2/F10 等)，设置随系统启动，还原系统状态 保证无论是否登录，软件均启动（必要时，设置启动计划） TeamViewer，远程桌面管理，可以异地办公 Sunlogin,向日葵 RealVNC，TeamViewer 的替代品，可选家庭订阅，上限 5 人。需要服务端安装 Server，客户端按照 Viewer ssh, 进行密钥传送 ssh-keygen -t rsa -b 4096 -C \u0026#34;rasp\u0026#34; -f \u0026#34;C:/Users/username/.ssh/pve/rasp\u0026#34; type $env:USERPROFILE\\.ssh\\pve\\rasp.pub | ssh -p xxx root@192.168.31.xx \u0026#34;cat \u0026gt;\u0026gt; .ssh/authorized_keys\u0026#34; Google 浏览器Microsoft Edge Microsoft Edge, 自带或者搜索安装 SwitchOmega, 规则 Bitwarden, 密码管理，自己进行搭建，并注意定期备份 uBlock Origin 暴力猴, GoogleDrive 同步 BookMarkHub, 跨浏览器标签同步 Aria2 for Edge, 微软账号同步 Surfingkeys, vim控制 IDM Integration Module, 下载网址3, 备份网址1 OneTab Temp mail 沙拉查词 - [谷歌浏览器 Chrome | 异次元软件](https://www.iplaysoft.com/tools/chrome/) - [集装箱](https://greasyfork.org/zh-CN/scripts/382927-%E9%9B%86%E8%A3%85%E7%AE%B1)，集合了网盘、优惠购、右键增强、下载卫士及上网工具 - [Lastpass](https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd)，密码管理软件，免费版打通了浏览器和移动端 - [Surfingkeys](https://chrome.google.com/webstore/detail/surfingkeys/gfbliohnnapiefjpjlpjnehglfpaknnc)，vim 对浏览器进行控制 - [Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)，篡改猴，脚本管理器，脚本稍后再进行更新 - [OneTab](https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall)，一键保存访问的网页链接 - [The Great Suspender](https://chrome.google.com/webstore/detail/klbibkeccnjlkjkiokjodocebajanakg) - [uBlock Origin](https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm)，对网页元素进行管理 - [Google Keep](https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi)，随时随地进行 google keep 记录 - [Pocket](https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj)，对暂不访问的网页进行保存 - [IE Tab](https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd)，适应部分 IE 专用网页 - [Reggy](https://chrome.google.com/webstore/detail/reggy/pnneajlgffpejnabhionnhdfhibijihe)，多个邮箱备用 - [沙拉查词](https://chrome.google.com/webstore/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en)，桌面和浏览器翻译，教程详见[沙拉查词使用方式](https://saladict.crimx.com/manual.html)，可配合 Quick(\\#Quick) 使用 - [Nooboss](https://chrome.google.com/webstore/detail/nooboss/aajodjghehmlpahhboidcpfjcncmcklf), 扩展管理 - [Advanced Font Setting](https://chrome.google.com/webstore/detail/advanced-font-settings/caclkomlalccbpcdllchkeecicepbmbm)，字体替换管理 - [Aria2](https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn)（配合 Aria2[^1]使用），aria2 下载 - 登录账号，进行设置的同步 meirivps\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n知乎专栏介绍https://zhuanlan.zhihu.com/p/37021947\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nDiakov\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n百度网盘\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/best_config_windows/","summary":"\u003ch2 id=\"windows安装及优化\"\u003eWindows安装及优化\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e选择\u003ca href=\"https://next.itellyou.cn/Identity/Account/Login?ReturnUrl=%2FOriginal%2FIndex\"\u003ew11专员工作站版本\u003c/a\u003e, \u003ca href=\"https://meledee.com/2021/11/3953.html\"\u003e2021lstc 专业版\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"最佳实践-Windows软件最佳实践"},{"content":"测试目标 不同主机，随时随地进行数据的更新和同步 自动对拉取数据进行检测，自动拉取主题 生成一键脚本来检测 themes 文件夹，如果主题文件夹为空，则进行相关主题拉取 脚本可以自动完成数据的一键提交, 数据的分发和同步 结果 拉取和提交测试成功 主题拉取需要在进行脚本的试验 ","permalink":"https://suai.tk/posts/test_differt_add/","summary":"\u003ch2 id=\"测试目标\"\u003e测试目标\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e不同主机，随时随地进行数据的更新和同步\u003c/li\u003e\n\u003cli\u003e自动对拉取数据进行检测，自动拉取主题\n\u003cul\u003e\n\u003cli\u003e生成一键脚本来检测 themes 文件夹，如果主题文件夹为空，则进行相关主题拉取\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e脚本可以自动完成数据的一键提交, 数据的分发和同步\u003c/li\u003e\n\u003c/ol\u003e","title":"TEST"},{"content":" SQL 基本概念及语句的执行顺序、在线教程和练习网站\nSQL 定义 Structured Query Language:\n文档参考\n维基百科 wiki 语法参考 SQLSERVER Oracle Google BigQuery 关键字\nwith select distinct [case when then else end] as from (left|inner|right|full) [out] join where and or in exists like|rlike group by having order by limit union [all] ..执行..顺序：\n(8)SELECT (9)DISTINCT (11)[Top_Num] [select_list]\n(1)FROM [left_table]\n(3)[join_type] JOIN [right_table]\n(2)ON [join_condition]\n(4)WHERE [where_condition]\n(5)GROUP BY [group_by_list]\n(6)WITH [CUBE|RollUP]\n(7)HAVING [having_condition]\n(10)ORDER BY [order_by_list]\n在线网站收集 SQLZOO, 教程和在线练习 W3C, 教程和在线练习 Oracle, 教程和在线练习， Oracle 数据库 jdoodle, 包含各式在线的 ide sqlfiddle, 提供示例文件进行练习 Sqlite Browser，包含 SQLite, MariaDB, PostgreSQL 和部分语法 ","permalink":"https://suai.tk/posts/sql3m_001/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSQL 基本概念及语句的执行顺序、在线教程和练习网站\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"sql-定义\"\u003eSQL 定义\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eStructured Query Language:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e文档参考\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/SQL#Interoperability_and_standardization\"\u003e维基百科\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/SQL_syntax\"\u003ewiki 语法参考\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/zh-cn/sql/?view=sql-server-ver15\"\u003eSQLSERVER\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.oracle.com/technetwork/cn/database/database-technologies/sql/documentation/index.html\"\u003eOracle\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/bigquery/docs/reference/standard-sql/enabling-standard-sql?hl=zh-cn\"\u003eGoogle BigQuery\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e关键字\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003edistinct\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ewhen\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e] \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efrom\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003eleft\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einner\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eright\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efull\u003c/span\u003e) [\u003cspan style=\"color:#66d9ef\"\u003eout\u003c/span\u003e] \u003cspan style=\"color:#66d9ef\"\u003ejoin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eand\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eor\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eexists\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elike\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003erlike\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003egroup\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eby\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003ehaving\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eorder\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eby\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elimit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eunion\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003eall\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"每日SQL三分钟_001"},{"content":"前言 框架的选择：hugo Hugo-PaperMod主题 git submodule update --remote --merge Hugo-GithubActions 部署的选择： GithubPages Netlify, 不再更新。Netlify, 参考 hugo 的 netlify 版块进行设计 Rsync2VPS VPS、Domain、CDN： 服务器 JustHosts, 年付$16 左右 Pacificrack, 年付$8 左右 GoogleCloud, $300free Domain BDC, 赶上活动 10 年域名较便宜 Freenom, 12 月维护一次的，free 注册信息和 ip 地址要一致。国际网快一些，国内网打开较慢 域名下要有网站, 可能会被回收 解析和 CDN CloudFlare, 国际免费解析 CDN 本地预览和推送的测试 代码：import numpy as np from sklearn.model_selection import train_test_split 测试..公式..：$E=mc^2$ $$E=mc^2$$ 测试锚点 ↑ top 测试脚注, Markdown1 修改 SVG、logo 设计SVG, 压缩, 编辑 svg, svg 添加class=\u0026quot;brand\u0026quot; touch ./content/data/SVG.toml brand = \u0026#39;\u0026#39; # 粘贴SVG 设计 logo，上传https://realfavicongenerator.net/进行编辑和压缩，下载后按以下操作 cp android-chrome-512x512.png ./static/icons cp apple-touch-icon.png ./static/icons cp mstile-150x150.png ./static/icons cp safari-pinned-tab.svg ./static/icons cp favicon.ico ./static cp site.webmanifest ./static \u0026amp;\u0026amp; mv site.webmanifest manifest.json 致谢 1. 本主题使用了 Meme，感谢作者reuixiy, 参考了Hugo 主题 MemE 文档\nMarkdown 是一种纯文本标记语言\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://suai.tk/posts/hello_world/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e框架的选择：\u003ca href=\"https://gohugo.io/documentation\"\u003ehugo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/adityatelange/hugo-PaperMod\"\u003eHugo-PaperMod主题\u003c/a\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule update --remote --merge\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/peaceiris/actions-gh-pages#getting-started\"\u003eHugo-GithubActions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e部署的选择：\n\u003col\u003e\n\u003cli\u003eGithubPages\u003c/li\u003e\n\u003cli\u003eNetlify, 不再更新。\u003cdel\u003e\u003ca href=\"https://www.netlify.com\"\u003eNetlify\u003c/a\u003e, 参考 hugo 的 netlify 版块进行设计\u003c/del\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.lancitou.net/using-github-actions-to-deploy-hugo-blog-to-self-hosted-vps/\"\u003eRsync2VPS\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"Hello World"}]