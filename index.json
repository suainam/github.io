[{"content":"vps 前期准备  安装基本的软件、更新和配置，详见建站探索 修改 python 默认的版本，详见建站探索 修改为密钥连接，详见使用密钥连接 VPS  安装和卸载宝塔面板  安装面板，如果后续出现问题需要卸载，可以使用卸载的命令(2 选项不会清空网站和数据空，需要卸载面板前操作删除)  # install wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh \u0026amp;\u0026amp; bash install.sh -y # uninstall wget http://download.bt.cn/install/bt-uninstall.sh \u0026amp;\u0026amp; sh bt-uninstall.sh 安装必要的运行环境","permalink":"https://suai.tk/posts/built_site_with_bt/","summary":"\u003ch2 id=\"vps-前期准备\"\u003evps 前期准备\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e安装基本的软件、更新和配置，详见\u003ca href=\"\"\u003e建站探索\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e修改 python 默认的版本，详见\u003ca href=\"\"\u003e建站探索\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e修改为密钥连接，详见\u003ca href=\"\"\u003e使用密钥连接 VPS\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"使用宝塔搭建网站"},{"content":"最近 github 广东访问特别慢，新加坡的节点经常无响应，猜测应该是 DNS 污染导致，故而修改如下：\n在网站进行 github 相关查询 github.com assets-cdn.github.com github.global.ssl.fastly.net 修改 Hosts # C:\\Windows\\System32\\drivers\\etc\\ 192.30.253.112 github.com 192.30.253.113 github.com 151.101.184.133 assets-cdn.github.com 151.101.185.194 github.global.ssl.fastly.net 刷新 DNS 缓存 ipconfig /flushdns 参考文章  国内加速 GitHub 访问方法 ","permalink":"https://suai.tk/posts/solve_dns_about_github/","summary":"\u003cp\u003e最近 github 广东访问特别慢，新加坡的节点经常无响应，猜测应该是 DNS 污染导致，故而修改如下：\u003c/p\u003e","title":"解决Github DNS污染"},{"content":"为了在已有 VPS 的基础上进行进一步的优化，有必要进行加速软件的安装。\n两种安装方法 一键安装脚本和手动安装的，推荐一件安装脚本。\n一键脚本 先安装内核，然后安装加速脚本\nwget -N --no-check-certificate \u0026#34;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\u0026#34; \u0026amp;\u0026amp; chmod +x tcp.sh \u0026amp;\u0026amp; ./tcp.sh 手动安装 注意事项   安装锐速需要降级系统内核，而安装 Google BBR 则需要升级系统内核，故两者不能同时安装。\n  安装锐速需要降级系统内核，有可能造成系统不稳定，故不建议将其应用在重要的生产环境中。\n  本教程只适用于 CentOS6 x64 和 CentOS7 x64 系统！\n  判断系统类型 uname -r 回车后，会输出当前系统的内核版本。主要分三种情况：\n 结果以 2 开头，例如 2.6.32-696.18.7.el6.x86_64。  这种输出结果说明我们的服务器为 CentOS6 x64 系统，大家直接查看第三步进行锐速安装即可。\n结果以 3 开头，例如 3.10.0-693.11.6.el7.x86_64。  这种输出结果说明我们的服务器为 CentOS7 x64 系统，大家直接查看第四步进行锐速安装即可。\n结果以 4 开头，例如 4.12.10-1.el7.elrepo.x86_64。  这种输出结果说明我们的服务器已经安装 Google BBR 拥塞控制算法，此时已经无法继续安装锐速。\nCentOS6 x64 系统安装锐速 如果在第二步中确定的服务器系统为 CentOS6 x64，那么请看这一步。\nwget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh \u0026amp;\u0026amp; bash appex.sh install \u0026#39;2.6.32-642.el6.x86_64\u0026#39; 一路回车即可\nCentOS7 x64 系统安装锐速 如果在第二步中确定的服务器系统为 CentOS7 x64，那么请看这一步。 因为 CentOS7 X64 系统的内核版本太高，所以没办法直接安装锐速，我们需要对系统内核进行降级操作。\nwget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh \u0026amp;\u0026amp; bash rskernel.sh 统会自动下载内核更换脚本并执行。按照下图提示，我们可以看到当前系统为 CentOS7 X64，同时脚本正在更换内核。\n内核更换完成后，会进行重启操作，这样才能成功更换内核\n服务器重启后， Xshell 的连接会断开\n服务器重启大概会耗时 2~3 分钟，我们耐心等待即可。\n重连以后输入一下命令：\nyum install net-tools -y \u0026amp;\u0026amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh \u0026amp;\u0026amp; bash appex.sh install 回车即可\n锐速管理命令 本文中的锐速一键脚本提供了非常丰富的管理命令，大家可以按照下列命令进行锐速的管理。\n/appex/bin/serverSpeeder.sh status|start|stop|restart|uninstall 参考文章  CentOS6/7 专用破解版锐速一键安装脚本 - Vultr 中文网 ","permalink":"https://suai.tk/posts/speeder_vps/","summary":"\u003cp\u003e为了在已有 VPS 的基础上进行进一步的优化，有必要进行加速软件的安装。\u003c/p\u003e","title":"加速算法_VPS"},{"content":"众所周知，宝塔面板是通过 ip:port/safeport 来进行访问的，这样会产生几个问题：\n ip 地址的操作，包括输入和记忆，均比较麻烦。更不用说，拥有多个 ip 的。 ip 有可能会被 Q 掉，这样基本很难通过简单的方法进行连接了。 ip 访问可能延迟较大，不稳定 ip 是 http 的，存在安全的问题 面板访问路径可能会被爆破。如何尽可能实现数据的分流，隐藏面板的访问路径  针对以上问题，我搜寻了所有的 google、baidu 查询，没有找到能够完美解决的办法，于是参考 11进行了改进。\n约定 主站域名：xxx.site, bt 面板域名：yyy.xxx.site(静态网站), safeport 为创建面板时分配的安全入口。\n进行设置 创建面板域名静态网站 在 CloudFlare 添加解析，并设置主站重定向 解析主站。 然后添加面板域名的解析，并设置为灰色，即只启用 DNS。\n修改SSL/TLS--\u0026gt;Edge Certificate--\u0026gt;Always use HTTPS为OFF。\n添加Page Rules, 将 http://xxx.site/* 301 重定向到 https://xxx.site/$1。\n修改面板端口和域名 建议端口为 http, 参考2\nHTTP ports supported by Cloudflare: 80;8080;8880;2052;2082;2086;2095 HTTPS ports supported by Cloudflare: 443;2053;2083;2087;2096;8443 比如 8880，此时会强制要求重新登录，使用yyy.xxx.site:port/safeport进行登录。\n面板域名网站添加反代，并开启 CDN http://127.0.0.1:8880\n使用xxx.site/safeport进行登录。\n设置默认站点 在宝塔设置主站为默认站点。\n此时返回面板，默认端口变成了 80, 尝试修改为 8880, 提示被占用。\n之后登录所有未设置过的子域名均会被重定向到主站。防止被恶意解析。\nFAQ 其他详细的可参考宝塔文档3。\nQ1: 移除面板的域名访问限制\nA1: ssh 登录，使用bt中的12进行移除域名绑定限制\nQ2: 如何移除面板的 SSL\nA2:\nrm -f /www/server/panel/data/ssl.pl \u0026amp;\u0026amp; /etc/init.d/bt restart   隐藏 IP 方法之给宝塔面板绑定域名套上 cloudflare 使用 cdn 访问\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Identifying network ports compatible with Cloudflare\u0026rsquo;s proxy – Cloudflare Support\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 序言 · 宝塔面板手册 · 看云\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/btpanel_domain_proxy_with_cf/","summary":"\u003cp\u003e众所周知，宝塔面板是通过 \u003ccode\u003eip:port/safeport\u003c/code\u003e 来进行访问的，这样会产生几个问题：\u003c/p\u003e","title":"宝塔面板域名使用CloudFlare进行隐藏"},{"content":"通过密钥来连接 vps，可以增强按照安全性，避免许多爆破尝试，比如以下的\nConnecting to xxx.xx.xx.xxx:xx Connection established. To escape to local shell, press \u0026#39;Ctrl+Alt+]\u0026#39;. Last failed login: Sat Feb 8 22:40:37 CST 2020 from xx.xx.xx.xxx on ssh:notty There were 891 failed login attempts since the last successful login. Last login: Sat Feb 8 17:31:17 2020 from xx.xx.xx.xxx 生成密钥对 ssh-keygen -t rsa -C \u0026#34;youremail\u0026#34; 上传到 VPS ssh-copy-id user@host 中间需要输入密码，然后就会在~生成.ssh/authorized_keys, 并自动帮助设置好文件夹权限和 pubkey 的权限1\n编辑 sshd 配置并且重启 sshd vim /etc/ssh/sshd_config # 编辑以下行，取消掉前面的`#` PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys # 禁用密码登录 PasswordAuthentication no systemctl sshd restart 重新连接 先不要关闭该 ssh 连接的界面！！！\n先不要关闭该 ssh 连接的界面！！！\n先不要关闭该 ssh 连接的界面！！！\n另开一个新的标签页，尝试连接，找到私钥位置，然后导入本地的 ssh 终端。\n使用 key 来连接，如果成功了，说明安装操作均没有问题。 否则，需要再次进行检查，哪一步出了问题。\n系统重装  重装前，编辑sshd_config, PasswordAuthentication修改为yes 重装系统，然后使用root密码登录 本地客户端，ssh-keygen -R hostname, hostname即ip地址，解除配对2 重新上传密钥，然后测试登录  参考链接   .ssh directory does not exist debian\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n How to establish ssh key pair when \u0026ldquo;Host key verification failed\u0026rdquo; - Stack Overflow\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/connect_vps_with_key/","summary":"\u003cp\u003e通过密钥来连接 vps，可以增强按照安全性，避免许多爆破尝试，比如以下的\u003c/p\u003e","title":"通过密钥连接VPS"},{"content":"查询优化  小表在前，大表在后 对子查询优化后再联结 尽量不用 cross join  重难点  执行顺序：ON and WHERE  执行的时候先根据联结的条件进行 inner 查询，然后追加上 left 或者 right ON 比 WHERE 早执行, 一些需要扩展的信息放在 on 里面 两表执行 on 联结以后，如果需要使用 where，需要特别..注意：不要再将保留表筛选掉..   where 在 group by 前面筛选， having 在后面 instr 和 group_concat 可以对数据进行归并处理(参考 impala1) 窗口函数可以有效降低语句复杂度，更简洁、美观  sum/count/min/max row_number/rank/dense_rank first_value/last_value      Impala 文档\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/sql3m_002/","summary":"\u003ch2 id=\"查询优化\"\u003e查询优化\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e小表在前，大表在后\u003c/li\u003e\n\u003cli\u003e对子查询优化后再联结\u003c/li\u003e\n\u003cli\u003e尽量不用 cross join\u003c/li\u003e\n\u003c/ol\u003e","title":"每日SQL三分钟_002"},{"content":"创建环境 主要参考官网文档1和 RssHub2文档\nsudo curl -L \u0026#34;https://github.com/docker/compose/releases/download/1.25.1/docker-compose-$(uname -s)-$(uname -m)\u0026#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common # 下一步未试验成功 add-apt-repository \u0026#34;deb [arch=amd64] https://download.docker.com/linux/debian \\$(lsb_release -cs) stable\u0026#34;   Get Docker Engine\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n RSSHub\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/rsshub_build/","summary":"\u003ch2 id=\"创建环境\"\u003e创建环境\u003c/h2\u003e\n\u003cp\u003e主要参考官网文档\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e和 RssHub\u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e文档\u003c/p\u003e","title":"RssHub Test"},{"content":"在主机(VPS)搭建网站 默认按照 Debian 进行, 默认为 root 权限，如果其他用户，在前面添加sudo\n建站前配置 Q1: ssh 连接提示：\nConnecting to xx.xx.xx.xx:xx... Connection established. To escape to local shell, press \u0026#39;Ctrl+Alt+]\u0026#39;. Connection closing...Socket close. Connection closed by foreign host. Disconnected from remote host(pr) at 11:38:50. A1: 可能是 SSH 服务器没设置保活时间间隔1，设置属性解释2\necho \u0026#34; ClientAliveInterval 60 ClientAliveCountMax 3 \u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config \u0026amp;\u0026amp; systemctl restart sshd 如果需要安装宝塔，需要在此处开始!!!\n如果需要安装宝塔，需要在此处开始!!!\n如果需要安装宝塔，需要在此处开始!!!\n参考宝塔 Linux 面板安装教程\nQ2: 进行系统的更新升级及必要程序的安装（vim/curl/wget/screen), 对 vim 设置行号、大小写查询转换、tab 宽度等3\nA2: 执行以下的脚本\napt-get update -y \u0026amp;\u0026amp; apt-get upgrade -y \u0026amp;\u0026amp; apt-get install -y vim wget screen curl \u0026amp;\u0026amp; echo \u0026#34;syntax on set smartcase set number set shiftwidth=4 set tabstop=4 set expandtab \u0026#34; \u0026gt;\u0026gt; /etc/vim/vimrc \u0026amp;\u0026amp; tail /etc/vim/vimrc Q3: 修改 python 的默认软链接\nA3:\nln -sf /usr/bin/python3 /usr/bin/python \u0026amp;\u0026amp; python --version # apt-get install python3-pip \u0026amp;\u0026amp; pip3 --version Q4: install v2ray\nA4: 233script，这个可以后面另开叙述，此处仅供备用\nbash \u0026lt;(curl -s -L https://git.io/v2ray.sh) 搭建网站 选择 LNMP 或者 Caddy 均可，500M 以上内存建议 LNMP， 仅供参考\nLNMP 参考lnmp.org的安装教程，在此只提供必要的说明。 在lnmp.org.auto按照自己 vps 的情况，内存分配器可以选jemalloc，生成一键脚本, 进行安装\n 创建虚拟机，并添加泛域名解析。  lnmp vhost add # xxx.site # *.xxx.site #删除虚拟机， # lnmp vhost del # chattr -i /home/wwwroot/msuai.top/.user.ini # rm -rf /home/wwwroot/msuai.top cf 进行泛域名解析  cloudflare 进行域名的绑定和解析，然后 ssl 里面先选程 flexible 模式，获得 CF_key, CF_pem\nexport CF_Key=\u0026#34;xxxxxx\u0026#34; export CF_Email=\u0026#34;xxxxxx\u0026#34; lnmp dnsssl cf 此处使用 globe key, 可以安装成功。 如果要将 flexible 改成 full 或者 full(strict)，需要更多的配置，暂时没有测试完毕，可参考文档4\n修改 nginx.conf 里面的配置，添加一下include内容， 并测试重启 nginx 服务5, 访问域名，不再显示nginx welcome 但也不是 ip 探针、phpmyadmin 等内容  include vhost/*.conf # 测试nginx， 并重启 nginx -t /etc/init.d/nginx reload 配置多站点, 安装虚拟机，进行解析和网站目录的设置  Caddy+php 参考小内存 VPS 安装 Caddy+PHP 7+Sqlite 3 环境，并快速搭建 Typecho 博客，可以成功安装\n只能先使用 flexible 模式。 如果使用了 cloudflare 的严格模式，一直出现 521 错误，即使加了插件和 tls，也出错，目前没有找到更好的解决办法，需要后续再来解决4\napt-get install php7.0-cgi php7.0-fpm php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite3 sqlite3 -y # install caddy with doubi wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh \u0026amp;\u0026amp; chmod +x caddy_install.sh \u0026amp;\u0026amp; bash caddy_install.sh install # tls.dns.cloudflare # 编辑Caddyfile echo \u0026#34;http://xxx.site { redir https://www.xxx.site{url} } https://www.xxx.site { gzip root /yoursite_pwd # tls { # dns cloudflare # } fastcgi / /run/php/php7.0-fpm.sock php rewrite { if {path} not_match ^\\/admin to {path} {path}/ /index.php?{query} } }\u0026#34; \u0026gt; /usr/local/caddy/Caddyfile # 重启caddy /etc/init.d/caddy restart 安装 webserver 默认网站目录为 $YWS, 执行完 shell 脚本，打开域名即可安装\n  安装文件\n 安装 WordPress, 比如 $YWS = wp.xxx.site  # 如果需要重装，只需要删除里面的`wp-config.php`即可[，相关的数据库进行清理] cd $YWS wget https://cn.wordpress.org/latest-zh_CN.tar.gz \u0026amp;\u0026amp; tar zxvf latest* \u0026amp;\u0026amp; mv ./wordpress/* ./ \u0026amp;\u0026amp; rm -rf latest* wordpress/ \u0026amp;\u0026amp; chmod -R 755 ./ \u0026amp;\u0026amp; chown www:www -R ./*  安装 Typecho, 比如 $YWS = tp.xxx.site  cd $YWS #以下为最新稳定版 wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gz \u0026amp;\u0026amp; tar zxvf 1.1* \u0026amp;\u0026amp; mv ./build/* ./ \u0026amp;\u0026amp; rm -rf 1.1* buil* \u0026amp;\u0026amp; chmod -R 755 ./* \u0026amp;\u0026amp; chown www:www -R ./*  安装 Zblog, 比如 $YWS = zg.xxx.site  cd $YWS wget https://update.zblogcn.com/zblogphp/install.tar.gz \u0026amp;\u0026amp; tar -xf ./install.tar.gz \u0026amp;\u0026amp; rm -rf ./install.tar.gz \u0026amp;\u0026amp; chmod -R 755 ./* \u0026amp;\u0026amp; chown www:www -R ./*   FAQ\nQ1: 在设置中开启了站点的https，出现重定向循环\nA1: 修改 wordpress 根目录($YWS)的 wp-config.php，在 \u0026lt;?php 后其添加如下代码\n$_SERVER[\u0026#39;HTTPS\u0026#39;] = \u0026#39;on\u0026#39;; define(\u0026#39;FORCE_SSL_LOGIN\u0026#39;, true); define(\u0026#39;FORCE_SSL_ADMIN\u0026#39;, true); Q2: 找到适配 typecho\u0026amp;wordpress 的主题\nA2：\n  typecho 主题参考\nPureLove 小清新风格 - Typecho 主题模板站\nBigfa 简约但精致的主题 - Typecho 主题模板站\nArmxMod for Typecho - Typecho 个性化响应式自适应主题\nAL_lolimeow 主题 for Typecho 版-盒子萌\nAurora\n  wordpress 主题参考\nSakura\nSakura2，该主题不可用\nH-Siren\nLolimeow\nRabbit3.0\n    使用 Github 和 Netlify 搭建静态网页 分别使用仓库对 githubpages 和 Netlify 搭建，域名使用 Cloudflare进行设置解析，遇到以下问题：\n q1: 网页没有格式，css 无法进行网页的生成。F12 查看网页 css 代码发现：  Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://xxxxx.ga/css/xx.css\u0026#39; \u0026amp;\u0026amp; with computed SHA-256 integrity \u0026#39;Df4VYwE3+jo4Q=\u0026#39;. The resource has been blocked.   a1: 解决方法： 关闭 Cloudflare 的 css/js/html 数据压缩\n  q2: Netlify中使用 hugo 进行静态网页制作，其中对 theme 进行git submodule add订阅，异地进行数据更新维护时，发现本地无法进行预览，缺少模板文件（template、html 等等，提示需要进行模板文件的创建）\n  a2: 本地的 clone 的主题文件夹为空，需要清理后，重新订阅主题，才能正确进行预览\n  Docker 安装网站等一系列 # install docker # 参考 \u0026lt;https://zhuanlan.zhihu.com/p/93839317\u0026gt; apt-get remove docker docker-engine docker.io curl -fsSL get.docker.com -o get-docker.sh \u0026amp;\u0026amp; sh get-docker.sh pip install docker-compose mkdir -p ./composet_demo/docker echo \u0026#34; version: \u0026#39;3\u0026#39; services: caddy: image: abiosoft/caddy ports: - \u0026#34;80:80\u0026#34; - \u0026#34;443:443\u0026#34; volumes: - ./path/to/your/Caddyfile:/etc/Caddyfile - /path/to/certificate/.caddy:/root/.caddy - /your/site/root:/srv restart: always environment: - CLOUDFLARE_EMAIL=your_email_here - CLOUDFLARE_API_KEY=your_api_key - ACME_AGREE=true - TZ=Asia/Shanghai networks: - frontend db: image: mysql:5.7 volumes: - ./path/to/database:/var/lib/mysql restart: always expose: - \u0026#34;3306\u0026#34; environment: - MYSQL_ROOT_PASSWORD=password - MYSQL_DATABASE=typecho - MYSQL_USER=typecho - MYSQL_PASSWORD=password - TZ=Asia/Shanghai networks: - frontend php: image: php:fpm volumes: - /your/site/root:/var/www/html restart: always expose: - \u0026#34;9000\u0026#34; environment: - TZ=Asia/Shanghai depends_on: - db - caddy networks: - frontend networks: frontend: \u0026#34; \u0026gt; ./composet_demo/docker/docker-compose.yml 插件推荐 Typecho 主要进行主题和插件的收藏，备用\n主题  Inital 主题，参考分享 下的文章 - OFFODD pass  插件  缓存插件，缓存插件 TpCache for Typecho - 老高的技术博客 Sitemap, Typecho 站点地图快速生成插件 Sitemap - TYPECHO WIKI  未完待续\n  解决 SSH Connection closed by foreign host 问题\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n What options `ServerAliveInterval` and `ClientAliveInterval` in sshd_config exactly do?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n REDEFINE-TAB-AS-4-SPACES\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n CloudFlare 证书配置\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n NGINX-ONLY-SHOWS-WELCOME-PAGE\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/bulit_site_hist/","summary":"\u003ch2 id=\"在主机vps搭建网站\"\u003e在主机(VPS)搭建网站\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e默认按照 Debian 进行, 默认为 root 权限，如果其他用户，在前面添加\u003ccode\u003esudo\u003c/code\u003e\u003c/strong\u003e\u003c/p\u003e","title":"建站历程"},{"content":"目的和原则  目的：做好软件的整理和归并，降低查找成本 原则：绿色\u0026gt;注册  按照重新配置新电脑的先后顺序进行排列 基本配置软件   火绒安全, 静默拦截各式弹窗, 系统占用低\n  百度输入法, 干净输入法\n  飞扬时空(http://flyonzone.ys168.com/)\n Total Commander， 文件管理器，结合了各式的管理工具 Faststone Capture，截图编辑工具 Ditto， win7 下剪切板工具，省却反复粘贴操作    Listary，快捷搜索和软件操作，可搭配 Total Commander 使用\n  下载软件，搭配使用\n aria2，替代迅雷下载神器  懒人配置包 Aria21，放到专用文件夹，设置成随浏览器开启而启动   Internet Download Manager，最强下载工具，多功能，可注册..或者.. PanDownload，部分需要从百度网盘下载，离线下载等软件    Quicker，实现一些软件启动等操作，搭配 Total Commander 和沙拉查词 使用\n  [天若 OCR]，图像识别\n  f.lux，桌面色温自动调整\n  v2rayN，V2ray 的使用，服务器搭建和公司内网穿透等，方便异地办公\n 个人网盘2，做了 Office16、git、v2raycore、hugo 的整合(qzq 的移动宽带没得下载)    办公软件  [Office]2,这个不需要介绍了 Anaconda, 集成管理 python/nodejs/jupyternotebook 等 VScode，地表最强编辑器，吹爆  插件 Settings Sync，第一时间下载同步上传设置 VIM 输入法解决(https://github.com/VSCodeVim/Vim#input-method) Fira Code 字体  下载字体：https://github.com/tonsky/FiraCode/releases 安装：https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions     Git2，并关联 Hugo2, 静态网页生成框架 Xshell\u0026amp;XFtp, ssh/ftp 连接管理 Notepad++，快速预览并进行编辑转码等 Gifcam， 屏幕录制成 gif Quick Look, 快速进行文件的预览 坚果云，自动同步工具  远端控制 基本都是限制只能个人使用的\n TeamViewer，远程桌面管理，可以异地办公 Anydesk,直接进行下载安装，类似 Teamviewer  电源管理, 保证断电后自启  电脑待机，断电后自动还原系统的状态。进入 BIOS(DELETE/F2/F10 等)，设置随系统启动，还原系统状态 保证无论是否登录，软件均启动（必要时，设置启动计划）     Sunlogin,向日葵 RealVNC，TeamViewer 的替代品，可选家庭订阅，上限 5 人。需要服务端安装 Server，客户端按照 Viewer  Google 浏览器   谷歌浏览器 Chrome | 异次元软件\n  集装箱，集合了网盘、优惠购、右键增强、下载卫士及上网工具\n  Lastpass，密码管理软件，免费版打通了浏览器和移动端\n  Surfingkeys，vim 对浏览器进行控制\n  Tampermonkey，篡改猴，脚本管理器，脚本稍后再进行更新\n  OneTab，一键保存访问的网页链接\n  The Great Suspender\n  uBlock Origin，对网页元素进行管理\n  Google Keep，随时随地进行 google keep 记录\n  Pocket，对暂不访问的网页进行保存\n  IE Tab，适应部分 IE 专用网页\n  Reggy，多个邮箱备用\n  沙拉查词，桌面和浏览器翻译，教程详见沙拉查词使用方式，可配合 Quick(#Quick) 使用\n  Nooboss, 扩展管理\n  Advanced Font Setting，字体替换管理\n  Aria2（配合 Aria2(#下载 Aria2)使用），aria2 下载\n  登录账号，进行设置的同步\n      知乎专栏介绍https://zhuanlan.zhihu.com/p/37021947\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 百度网盘\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/windows_program_config/","summary":"\u003ch2 id=\"目的和原则\"\u003e目的和原则\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e目的：做好软件的整理和归并，降低查找成本\u003c/li\u003e\n\u003cli\u003e原则：绿色\u0026gt;注册\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"按照重新配置新电脑的先后顺序进行排列\"\u003e按照重新配置新电脑的先后顺序进行排列\u003c/h2\u003e","title":"配置清单 Windows软件"},{"content":"测试目标  不同主机，随时随地进行数据的更新和同步 自动对拉取数据进行检测，自动拉取主题  生成一键脚本来检测 themes 文件夹，如果主题文件夹为空，则进行相关主题拉取   脚本可以自动完成数据的一键提交, 数据的分发和同步  结果  拉取和提交测试成功 主题拉取需要在进行脚本的试验 ","permalink":"https://suai.tk/posts/test_differt_add/","summary":"\u003ch2 id=\"测试目标\"\u003e测试目标\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e不同主机，随时随地进行数据的更新和同步\u003c/li\u003e\n\u003cli\u003e自动对拉取数据进行检测，自动拉取主题\n\u003cul\u003e\n\u003cli\u003e生成一键脚本来检测 themes 文件夹，如果主题文件夹为空，则进行相关主题拉取\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e脚本可以自动完成数据的一键提交, 数据的分发和同步\u003c/li\u003e\n\u003c/ol\u003e","title":"TEST"},{"content":" SQL 基本概念及语句的执行顺序、在线教程和练习网站\n SQL 定义   Structured Query Language:\n  文档参考\n 维基百科 wiki 语法参考 SQLSERVER Oracle Google BigQuery    关键字\n  with select distinct [case when then else end] as from (left|inner|right|full) [out] join where and or in exists like|rlike group by having order by limit union [all]    ..执行..顺序：\n(8)SELECT (9)DISTINCT (11)[Top_Num] [select_list]\n(1)FROM [left_table]\n(3)[join_type] JOIN [right_table]\n(2)ON [join_condition]\n(4)WHERE [where_condition]\n(5)GROUP BY [group_by_list]\n(6)WITH [CUBE|RollUP]\n(7)HAVING [having_condition]\n(10)ORDER BY [order_by_list]\n  在线网站收集  SQLZOO, 教程和在线练习 W3C, 教程和在线练习 Oracle, 教程和在线练习， Oracle 数据库 jdoodle, 包含各式在线的 ide sqlfiddle, 提供示例文件进行练习 Sqlite Browser，包含 SQLite, MariaDB, PostgreSQL 和部分语法 ","permalink":"https://suai.tk/posts/sql3m_001/","summary":"\u003cblockquote\u003e\n\u003cp\u003eSQL 基本概念及语句的执行顺序、在线教程和练习网站\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"sql-定义\"\u003eSQL 定义\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eStructured Query Language:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e文档参考\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/SQL#Interoperability_and_standardization\"\u003e维基百科\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://en.wikipedia.org/wiki/SQL_syntax\"\u003ewiki 语法参考\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.microsoft.com/zh-cn/sql/?view=sql-server-ver15\"\u003eSQLSERVER\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.oracle.com/technetwork/cn/database/database-technologies/sql/documentation/index.html\"\u003eOracle\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.google.com/bigquery/docs/reference/standard-sql/enabling-standard-sql?hl=zh-cn\"\u003eGoogle BigQuery\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e关键字\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan style=\"color:#66d9ef\"\u003ewith\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eselect\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003edistinct\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ewhen\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e] \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003efrom\u003c/span\u003e\n(\u003cspan style=\"color:#66d9ef\"\u003eleft\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003einner\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eright\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003efull\u003c/span\u003e) [\u003cspan style=\"color:#66d9ef\"\u003eout\u003c/span\u003e] \u003cspan style=\"color:#66d9ef\"\u003ejoin\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003ewhere\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eand\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eor\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eexists\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003elike\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003erlike\n\u003cspan style=\"color:#66d9ef\"\u003egroup\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eby\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003ehaving\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003eorder\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eby\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003elimit\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003eunion\u003c/span\u003e [\u003cspan style=\"color:#66d9ef\"\u003eall\u003c/span\u003e]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"每日SQL三分钟_001"},{"content":"前言  框架的选择：hugo Hugo-PaperMod主题 Hugo-GithubActions 部署的选择：  GithubPages Netlify, 不再更新。Netlify, 参考 hugo 的 netlify 版块进行设计   Rsync2VPS   VPS、Domain、CDN：\n  服务器\n JustHosts, 年付$16 左右 Pacificrack, 年付$8 左右 GoogleCloud, $300free    Domain\n BDC, 赶上活动 10 年域名较便宜 Freenom, 12 月维护一次的，free  注册信息和 ip 地址要一致。国际网快一些，国内网打开较慢 域名下要有网站, 可能会被回收      解析和 CDN\n CloudFlare, 国际免费解析 CDN      本地预览和推送的测试\n  代码：import numpy as np\nfrom sklearn.model_selection import train_test_split   测试..公式..：$E=mc^2$\n$$E=mc^2$$\n  测试锚点\n↑ top\n  测试脚注, Markdown1\n    修改 SVG、logo\n 设计SVG, 压缩, 编辑 svg, svg 添加class=\u0026quot;brand\u0026quot;  touch ./content/data/SVG.toml brand = \u0026#39;\u0026#39; # 粘贴SVG  设计 logo，上传https://realfavicongenerator.net/进行编辑和压缩，下载后按以下操作  cp android-chrome-512x512.png ./static/icons cp apple-touch-icon.png ./static/icons cp mstile-150x150.png ./static/icons cp safari-pinned-tab.svg ./static/icons cp favicon.ico ./static cp site.webmanifest ./static \u0026amp;\u0026amp; mv site.webmanifest manifest.json   致谢 1. 本主题使用了 Meme，感谢作者reuixiy, 参考了Hugo 主题 MemE 文档\n  Markdown 是一种纯文本标记语言\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://suai.tk/posts/hello_world/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e框架的选择：\u003ca href=\"https://gohugo.io/documentation\"\u003ehugo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/adityatelange/hugo-PaperMod\"\u003eHugo-PaperMod主题\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/peaceiris/actions-gh-pages#getting-started\"\u003eHugo-GithubActions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e部署的选择：\n\u003col\u003e\n\u003cli\u003eGithubPages\u003c/li\u003e\n\u003cli\u003eNetlify, 不再更新。\u003cdel\u003e\u003ca href=\"https://www.netlify.com\"\u003eNetlify\u003c/a\u003e, 参考 hugo 的 netlify 版块进行设计\u003c/del\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.lancitou.net/using-github-actions-to-deploy-hugo-blog-to-self-hosted-vps/\"\u003eRsync2VPS\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"Hello World"}]